import { createAsyncThunk, createSlice } from "@reduxjs/toolkit";

const initialState = {
  stageLevel: 0,
  isLoading: true,
  isStart: false,
  isEnd: false,
  modelAnimations: null,
  quizStatus: "idle",
  quizCount: 0,
  quizResult: null,
  status: "idle",
};

export const sleighSlice = createSlice({
  name: "sleigh",
  initialState,
  reducers: {
    setStage: (state, action) => {
      state.stageLevel = action.payload;
    },
    setIsStart: (state, action) => {
      state.isStart = action.payload;
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // // including actions generated by createAsyncThunk or in other slices.
  // extraReducers: (builder) => {
  //   builder
  //     .addCase(incrementAsync.pending, (state) => {
  //       state.status = "loading";
  //     })
  //     .addCase(incrementAsync.fulfilled, (state, action) => {
  //       state.status = "idle";
  //       state.value += action.payload;
  //     });
  // },
});

export const sleighActions = sleighSlice.actions;

export default sleighSlice.reducer;
