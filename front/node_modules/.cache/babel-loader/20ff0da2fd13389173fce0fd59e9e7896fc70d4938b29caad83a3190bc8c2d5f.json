{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  stageLevel: 0,\n  isLoading: true,\n  isStart: false,\n  isEnd: false,\n  modelAnimations: null,\n  quizStatus: \"idle\",\n  quizCount: 0,\n  quizResult: null,\n  status: \"idle\"\n};\nexport const sleighSlice = createSlice({\n  name: \"sleigh\",\n  initialState,\n  reducers: {\n    setStage: (state, action) => {\n      state.stageLevel = action.payload;\n    },\n    setIsStart: (state, action) => {\n      state.isStart = action.payload;\n    }\n  }\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // // including actions generated by createAsyncThunk or in other slices.\n  // extraReducers: (builder) => {\n  //   builder\n  //     .addCase(incrementAsync.pending, (state) => {\n  //       state.status = \"loading\";\n  //     })\n  //     .addCase(incrementAsync.fulfilled, (state, action) => {\n  //       state.status = \"idle\";\n  //       state.value += action.payload;\n  //     });\n  // },\n});\n\nexport const sleighActions = sleighSlice.actions;\nexport default sleighSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","stageLevel","isLoading","isStart","isEnd","modelAnimations","quizStatus","quizCount","quizResult","status","sleighSlice","name","reducers","setStage","state","action","payload","setIsStart","sleighActions","actions","reducer"],"sources":["C:/Users/SSAFY/Documents/S08P31B206/front/src/store/features/sliegh/sleighSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  stageLevel: 0,\r\n  isLoading: true,\r\n  isStart: false,\r\n  isEnd: false,\r\n  modelAnimations: null,\r\n  quizStatus: \"idle\",\r\n  quizCount: 0,\r\n  quizResult: null,\r\n  status: \"idle\",\r\n};\r\n\r\nexport const sleighSlice = createSlice({\r\n  name: \"sleigh\",\r\n  initialState,\r\n  reducers: {\r\n    setStage: (state, action) => {\r\n      state.stageLevel = action.payload;\r\n    },\r\n    setIsStart: (state, action) => {\r\n      state.isStart = action.payload;\r\n    },\r\n  },\r\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n  // // including actions generated by createAsyncThunk or in other slices.\r\n  // extraReducers: (builder) => {\r\n  //   builder\r\n  //     .addCase(incrementAsync.pending, (state) => {\r\n  //       state.status = \"loading\";\r\n  //     })\r\n  //     .addCase(incrementAsync.fulfilled, (state, action) => {\r\n  //       state.status = \"idle\";\r\n  //       state.value += action.payload;\r\n  //     });\r\n  // },\r\n});\r\n\r\nexport const sleighActions = sleighSlice.actions;\r\n\r\nexport default sleighSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,CAAC;EACbC,SAAS,EAAE,IAAI;EACfC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,KAAK;EACZC,eAAe,EAAE,IAAI;EACrBC,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE,CAAC;EACZC,UAAU,EAAE,IAAI;EAChBC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGX,WAAW,CAAC;EACrCY,IAAI,EAAE,QAAQ;EACdX,YAAY;EACZY,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACb,UAAU,GAAGc,MAAM,CAACC,OAAO;IACnC,CAAC;IACDC,UAAU,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACX,OAAO,GAAGY,MAAM,CAACC,OAAO;IAChC;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC,CAAC;;AAEF,OAAO,MAAME,aAAa,GAAGR,WAAW,CAACS,OAAO;AAEhD,eAAeT,WAAW,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}