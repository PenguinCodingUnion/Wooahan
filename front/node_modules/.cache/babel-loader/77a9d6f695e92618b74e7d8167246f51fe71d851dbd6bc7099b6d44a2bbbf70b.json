{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Documents\\\\S08P31B206\\\\front\\\\src\\\\components\\\\main\\\\Carousel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/css\";\nimport \"swiper/css/effect-coverflow\";\nimport \"swiper/css/pagination\";\nimport \"./styles.css\";\nimport { EffectCoverflow, Pagination } from \"swiper\";\nimport GameCard from './GameCard';\nimport CardImage from './CardImage';\nimport penguin from \"assets/images/animal/penguin.png\";\nimport bunny from \"assets/images/animal/bunny.png\";\nimport octopus from \"assets/images/animal/octopus.png\";\nimport fox from \"assets/images/animal/fox.png\";\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from \"react-redux\";\nimport { backActions } from 'store/features/mainCard/backSlice';\nimport { log } from \"console\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst games = [{\n  id: 1,\n  title: '뛰어쓰기',\n  animal: penguin,\n  url: '/jump'\n}, {\n  id: 2,\n  title: '팽글썰매',\n  animal: bunny,\n  url: '/sleigh'\n}, {\n  id: 3,\n  title: '한글방울',\n  animal: octopus,\n  url: '/bubble'\n}, {\n  id: 4,\n  title: '끝말기차',\n  animal: fox,\n  url: '/train'\n}, {\n  id: 5,\n  title: '뛰어쓰기',\n  animal: penguin,\n  url: '/jump'\n}, {\n  id: 6,\n  title: '팽글썰매',\n  animal: bunny,\n  url: '/sleigh'\n}, {\n  id: 7,\n  title: '한글방울',\n  animal: octopus,\n  url: '/bubble'\n}, {\n  id: 8,\n  title: '끝말기차',\n  animal: fox,\n  url: '/train'\n}];\nconst Carousel = () => {\n  _s();\n  const nav = useNavigate();\n  const dispatch = useDispatch();\n\n  // const page = useSelector(state => state.backGround.page)\n\n  const [mainCard, setMainCard] = useState(0);\n  const changeMainCard = num => {\n    console.log(num);\n    setMainCard(num);\n    dispatch(backActions.changeBackGround(num));\n  };\n  useEffect(() => {\n    dispatch(backActions.changeBackGround(0));\n  }, []);\n  const movePageHandler = (game, idx) => {\n    if (mainCard === idx) nav(game.url);\n  };\n  return (\n    /*#__PURE__*/\n    // <>\n    //     <Swiper\n    //         effect={\"coverflow\"}\n    //         grabCursor={true}\n    //         centeredSlides={true}\n    //         slidesPerView={3}\n    //         coverflowEffect={{\n    //             rotate: 50,\n    //             stretch: 10,\n    //             depth: 100,\n    //             modifier: 1,\n    //             slideShadows: false,\n    //         }}\n    //         // loopPreventsSlide={false}\n    //         // loop={true}  \n    //         pagination={true}\n    //         modules={[EffectCoverflow, Pagination]}\n    //         className=\"mySwiper\"\n    //         onSlideChange={(e) => changeMainCard(e.activeIndex)}\n    //     >\n    //         {games.map((game, idx) => (\n    //             <SwiperSlide onClick={() => {movePageHandler(game, idx)}} key={game.id} id={idx} className=\"relative rounded-xl\">\n    //                 <CardImage coverImage={mainCard} id={idx}/>\n    //                 <img src={games[idx].animal} \n    //                         className=\"ml-[2%] mt-[2%] mb-[2%] w-28 h-36\" />\n    //                 <GameCard\n    //                     id={game.id}\n    //                     title={game.title}\n    //                 />\n    //             </SwiperSlide>\n    //         ))}\n    //     </Swiper>\n    // </>\n    ///////////////////////////////////////////////////////\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Swiper, {\n        effect: \"coverflow\",\n        grabCursor: true,\n        centeredSlides: true,\n        slidesPerView: \"auto\",\n        loop: true,\n        coverflowEffect: {\n          rotate: 50,\n          stretch: 0,\n          depth: 100,\n          modifier: 1,\n          slideShadows: true\n        },\n        pagination: true,\n        modules: [EffectCoverflow, Pagination],\n        className: \"mySwiper\",\n        onSlideChange: e => changeMainCard(e.activeIndex),\n        children: games.map((game, idx) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          className: \"relative rounded-xl\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: games[idx].animal,\n            className: \"ml-[2%] mt-[2%] mb-[2%] w-28 h-36\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)\n        }, game.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  );\n};\n_s(Carousel, \"LDeJMt6ILSBrqz1RoPxhuO8u5DI=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Swiper","SwiperSlide","EffectCoverflow","Pagination","GameCard","CardImage","penguin","bunny","octopus","fox","useNavigate","useDispatch","backActions","log","jsxDEV","_jsxDEV","Fragment","_Fragment","games","id","title","animal","url","Carousel","_s","nav","dispatch","mainCard","setMainCard","changeMainCard","num","console","changeBackGround","movePageHandler","game","idx","children","effect","grabCursor","centeredSlides","slidesPerView","loop","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","pagination","modules","className","onSlideChange","e","activeIndex","map","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SSAFY/Documents/S08P31B206/front/src/components/main/Carousel.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\nimport \"swiper/css\";\r\nimport \"swiper/css/effect-coverflow\";\r\nimport \"swiper/css/pagination\";\r\n\r\nimport \"./styles.css\";\r\n\r\nimport { EffectCoverflow, Pagination } from \"swiper\";\r\nimport GameCard from './GameCard'\r\nimport CardImage from './CardImage'\r\n\r\nimport penguin from \"assets/images/animal/penguin.png\"\r\nimport bunny from \"assets/images/animal/bunny.png\"\r\nimport octopus from \"assets/images/animal/octopus.png\"\r\nimport fox from \"assets/images/animal/fox.png\"\r\nimport {useNavigate} from 'react-router-dom';\r\nimport { useDispatch } from \"react-redux\"\r\nimport { backActions } from 'store/features/mainCard/backSlice' \r\nimport { log } from \"console\";\r\n\r\nconst games =[\r\n    {id: 1, title: '뛰어쓰기', animal: penguin, url: '/jump'},\r\n    {id: 2, title: '팽글썰매', animal: bunny, url: '/sleigh'},\r\n    {id: 3, title: '한글방울', animal: octopus, url: '/bubble'},\r\n    {id: 4, title: '끝말기차', animal: fox, url: '/train'},\r\n    {id: 5, title: '뛰어쓰기', animal: penguin, url: '/jump'},\r\n    {id: 6, title: '팽글썰매', animal: bunny, url: '/sleigh'},\r\n    {id: 7, title: '한글방울', animal: octopus, url: '/bubble'},\r\n    {id: 8, title: '끝말기차', animal: fox, url: '/train'},\r\n]\r\n\r\nconst Carousel = () => {\r\n    const nav = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    // const page = useSelector(state => state.backGround.page)\r\n\r\n    const [mainCard, setMainCard] = useState(0);\r\n\r\n    const changeMainCard = (num) => {\r\n        console.log(num);\r\n        setMainCard(num);\r\n        dispatch(backActions.changeBackGround(num))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(backActions.changeBackGround(0))\r\n    }, [])\r\n\r\n    const movePageHandler = (game, idx) => {\r\n        if(mainCard === idx) nav(game.url)\r\n    }\r\n    \r\n    return (\r\n        // <>\r\n        //     <Swiper\r\n        //         effect={\"coverflow\"}\r\n        //         grabCursor={true}\r\n        //         centeredSlides={true}\r\n        //         slidesPerView={3}\r\n        //         coverflowEffect={{\r\n        //             rotate: 50,\r\n        //             stretch: 10,\r\n        //             depth: 100,\r\n        //             modifier: 1,\r\n        //             slideShadows: false,\r\n        //         }}\r\n        //         // loopPreventsSlide={false}\r\n        //         // loop={true}  \r\n        //         pagination={true}\r\n        //         modules={[EffectCoverflow, Pagination]}\r\n        //         className=\"mySwiper\"\r\n        //         onSlideChange={(e) => changeMainCard(e.activeIndex)}\r\n        //     >\r\n        //         {games.map((game, idx) => (\r\n        //             <SwiperSlide onClick={() => {movePageHandler(game, idx)}} key={game.id} id={idx} className=\"relative rounded-xl\">\r\n        //                 <CardImage coverImage={mainCard} id={idx}/>\r\n        //                 <img src={games[idx].animal} \r\n        //                         className=\"ml-[2%] mt-[2%] mb-[2%] w-28 h-36\" />\r\n        //                 <GameCard\r\n        //                     id={game.id}\r\n        //                     title={game.title}\r\n        //                 />\r\n        //             </SwiperSlide>\r\n        //         ))}\r\n        //     </Swiper>\r\n        // </>\r\n        ///////////////////////////////////////////////////////\r\n        \r\n        \r\n        <>\r\n            <Swiper\r\n                effect={\"coverflow\"}\r\n                grabCursor={true}\r\n                centeredSlides={true}\r\n                slidesPerView={\"auto\"}\r\n                loop={true}\r\n                coverflowEffect={{\r\n                    rotate: 50,\r\n                    stretch: 0,\r\n                    depth: 100,\r\n                    modifier: 1,\r\n                    slideShadows: true,\r\n                }}\r\n                pagination={true}\r\n                modules={[EffectCoverflow, Pagination]}\r\n                className=\"mySwiper\"\r\n                onSlideChange={(e) => changeMainCard(e.activeIndex)}\r\n            >\r\n\r\n                {games.map((game, idx) => (\r\n                    <SwiperSlide key={game.id} className=\"relative rounded-xl\">\r\n                        {/* <CardImage coverImage={mainCard} id={idx}/> */}\r\n                        <img src={games[idx].animal} \r\n                                className=\"ml-[2%] mt-[2%] mb-[2%] w-28 h-36\" />\r\n                    </SwiperSlide>\r\n                ))}\r\n\r\n            </Swiper>\r\n        </>\r\n\r\n        )\r\n    }\r\n\r\nexport default  Carousel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}