{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n// export const incrementAsync = createAsyncThunk(\n//   \"counter/fetchCount\",\n//   async (amount) => {\n//     const response = await fetchCount(amount);\n//     // The value we return becomes the `fulfilled` action payload\n//     return response.data;\n//   }\n// );\n\nconst initialState = {\n  actionWord: -1\n};\nexport const jumpSlice = createSlice({\n  name: \"jump\",\n  initialState,\n  reducers: {\n    nextAction: state => {\n      state.actionWord = state.actionWord + 1;\n    },\n    setAction: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.actionWord = payload;\n    }\n  }\n  // extraReducers: (builder) => {\n  //   builder\n  //     .addCase(incrementAsync.pending, (state) => {\n  //       state.status = \"loading\";\n  //     })\n  //     .addCase(incrementAsync.fulfilled, (state, action) => {\n  //       state.status = \"idle\";\n  //       state.value += action.payload;\n  //     });\n  // },\n});\n\nexport const jumpActions = jumpSlice.actions;\nexport default jumpSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","actionWord","jumpSlice","name","reducers","nextAction","state","setAction","_ref","payload","jumpActions","actions","reducer"],"sources":["C:/Users/SSAFY/Documents/S08P31B206/front/src/store/features/jump/jumpSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// export const incrementAsync = createAsyncThunk(\r\n//   \"counter/fetchCount\",\r\n//   async (amount) => {\r\n//     const response = await fetchCount(amount);\r\n//     // The value we return becomes the `fulfilled` action payload\r\n//     return response.data;\r\n//   }\r\n// );\r\n\r\nconst initialState = {\r\n  actionWord: -1,\r\n};\r\n\r\nexport const jumpSlice = createSlice({\r\n  name: \"jump\",\r\n  initialState,\r\n  reducers: {\r\n    nextAction: (state) => {\r\n      state.actionWord = state.actionWord + 1;\r\n    },\r\n    setAction: (state, { payload }) => {\r\n      state.actionWord = payload;\r\n    },\r\n  },\r\n  // extraReducers: (builder) => {\r\n  //   builder\r\n  //     .addCase(incrementAsync.pending, (state) => {\r\n  //       state.status = \"loading\";\r\n  //     })\r\n  //     .addCase(incrementAsync.fulfilled, (state, action) => {\r\n  //       state.status = \"idle\";\r\n  //       state.value += action.payload;\r\n  //     });\r\n  // },\r\n});\r\n\r\nexport const jumpActions = jumpSlice.actions;\r\n\r\nexport default jumpSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,CAAC;AACf,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGH,WAAW,CAAC;EACnCI,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACL,UAAU,GAAGK,KAAK,CAACL,UAAU,GAAG,CAAC;IACzC,CAAC;IACDM,SAAS,EAAEA,CAACD,KAAK,EAAAE,IAAA,KAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC,GAAAD,IAAA;MAC5BF,KAAK,CAACL,UAAU,GAAGQ,OAAO;IAC5B;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC,CAAC;;AAEF,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACS,OAAO;AAE5C,eAAeT,SAAS,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}