{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useRef } from \"react\";\nimport { useAnimations } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\nimport useRaycast from \"util/hooks/useRaycast.ts\";\nimport { Vector3 } from \"three\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GameStatus } from \"util/Enums.ts\";\nimport { gameStatusActions } from \"store/features/gameStatus/gameStatusSlice\";\nconst GRAVITY = -120 * 1.5;\nconst ANIMATIONS = [\"t-pose\", \"idle\", \"jumping\", \"walk\"];\nconst JUMP_FORCE = 80;\nconst BASE_MOVEMENT_SPEED = 50;\nconst MIN_SPEED_FOR_JUMP_ICE = 150;\nconst GROUND_HEIGHT = -80;\nconst EDGE = 360;\nconst usePengul = _ref => {\n  _s();\n  let {\n    pengulE,\n    ref,\n    animations,\n    sounds,\n    ...props\n  } = _ref;\n  const raycast = useRaycast(pengulE, 55, new Vector3(1, -1, 0));\n\n  //캐릭터 상태관리\n  const isJumping = useRef(false);\n  const jumpNow = useRef(false);\n  const isGrounded = useRef(false);\n  const characterPosition = useRef([-EDGE, GROUND_HEIGHT, 0]);\n  const characterVelocity = useRef([0, 0, 0]);\n\n  //애니메이션 정보\n  const activeAnimation = useRef(0);\n\n  //else\n  // const { nodes, materials, animations } = useGLTF(PengulE);\n  const {\n    actions\n  } = useAnimations(animations, ref);\n  const gameStatus = useSelector(state => state.gameStatus.status);\n  const dispatch = useDispatch();\n  const setActiveAnimation = useCallback(idx => {\n    if (activeAnimation.current === idx) return;\n    actions[ANIMATIONS[activeAnimation.current]].fadeOut(0.3);\n    actions[ANIMATIONS[idx]].reset().fadeIn(0.3).play();\n    activeAnimation.current = idx;\n  }, [actions]);\n  const doJump = useCallback(() => {\n    if (isJumping.current === false && gameStatus === GameStatus.GAME_START && activeAnimation.current === 1) {\n      //점프 상태 관리\n      isJumping.current = true;\n      jumpNow.current = 1;\n\n      //점프 애니메이션 재생\n      setActiveAnimation(2);\n      setTimeout(() => {\n        setActiveAnimation(3);\n      }, 1000);\n    }\n  }, [gameStatus, setActiveAnimation]);\n  useEffect(() => {\n    //Add Jump\n    window.addEventListener(`keydown`, e => {\n      if (e.code === `Space`) {\n        e.preventDefault();\n        doJump();\n      }\n    });\n    window.doJump = doJump;\n    setActiveAnimation(1);\n    return () => {\n      activeAnimation.current = 0;\n      window.doJump = () => {\n        console.log(`not claim function`);\n      };\n    };\n  }, [doJump, setActiveAnimation]);\n\n  //update\n  useFrame((_, delta) => {\n    // if (gameStatus !== GameStatus.GAME_START) return;\n\n    if (characterPosition.current[1] < GROUND_HEIGHT && !isGrounded.current) {\n      isGrounded.current = true;\n      isJumping.current = false;\n    }\n    const newVelocity = velocityCalc(delta);\n\n    // console.log(newVelocity, characterPosition);\n\n    // console.log(pengulE.current);\n\n    if (characterPosition.current[0] >= EDGE) {\n      dispatch(gameStatusActions.goNextLevel());\n    }\n    const newPosition = [characterPosition.current[0] < EDGE ? characterPosition.current[0] + newVelocity[0] * delta : -EDGE, isGrounded.current ? GROUND_HEIGHT : characterPosition.current[1] + newVelocity[1] * delta, characterPosition.current[2] + newVelocity[2] * delta];\n    pengulE.current.position.set(newPosition[0], newPosition[1], newPosition[2]);\n    characterPosition.current = newPosition;\n  });\n  const velocityCalc = useCallback(delta => {\n    const newVelocity = [...characterVelocity.current];\n    if (gameStatus !== GameStatus.GAME_START) return newVelocity;\n\n    //in Air\n    if (!isGrounded.current) {\n      newVelocity[0] = MIN_SPEED_FOR_JUMP_ICE;\n      newVelocity[1] += GRAVITY * delta;\n    } else {\n      //calc xVelocity\n      newVelocity[0] = BASE_MOVEMENT_SPEED;\n      newVelocity[1] = 0;\n      if (jumpNow.current) {\n        //jump\n        if (jumpNow.current === 1) {\n          //jump ready pose\n\n          //stop\n          newVelocity[0] = 0;\n\n          //ready for jump action  => go jump\n          if (actions[ANIMATIONS[activeAnimation.current]].time > 0.3) jumpNow.current = 2;\n        } else if (jumpNow.current === 2) {\n          //do jump\n          newVelocity[1] += JUMP_FORCE;\n\n          //점프 소리 내기\n          sounds.jumpSound.current.play();\n          jumpNow.current = false;\n          isGrounded.current = false;\n        }\n      } else if (raycast().length < 3) {\n        //now edge\n        newVelocity[0] = 0;\n        setActiveAnimation(1);\n      } else {\n        //just walk\n        setActiveAnimation(3);\n      }\n    }\n    characterVelocity.current = newVelocity;\n    return newVelocity;\n  }, [raycast, setActiveAnimation, gameStatus, actions, sounds]);\n};\n_s(usePengul, \"1czhSkuLWJs6qAs1I9L5w4O8d3A=\", false, function () {\n  return [useRaycast, useAnimations, useSelector, useDispatch, useFrame];\n});\nexport default usePengul;","map":{"version":3,"names":["useCallback","useEffect","useRef","useAnimations","useFrame","useRaycast","Vector3","useDispatch","useSelector","GameStatus","gameStatusActions","GRAVITY","ANIMATIONS","JUMP_FORCE","BASE_MOVEMENT_SPEED","MIN_SPEED_FOR_JUMP_ICE","GROUND_HEIGHT","EDGE","usePengul","_ref","_s","pengulE","ref","animations","sounds","props","raycast","isJumping","jumpNow","isGrounded","characterPosition","characterVelocity","activeAnimation","actions","gameStatus","state","status","dispatch","setActiveAnimation","idx","current","fadeOut","reset","fadeIn","play","doJump","GAME_START","setTimeout","window","addEventListener","e","code","preventDefault","console","log","_","delta","newVelocity","velocityCalc","goNextLevel","newPosition","position","set","time","jumpSound","length"],"sources":["C:/Users/SSAFY/Documents/S08P31B206/front/src/util/hooks/usePengulJump.jsx"],"sourcesContent":["import { useCallback, useEffect, useRef } from \"react\";\r\nimport { useAnimations } from \"@react-three/drei\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport useRaycast from \"util/hooks/useRaycast.ts\";\r\nimport { Vector3 } from \"three\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { GameStatus } from \"util/Enums.ts\";\r\nimport { gameStatusActions } from \"store/features/gameStatus/gameStatusSlice\";\r\n\r\nconst GRAVITY = -120 * 1.5;\r\nconst ANIMATIONS = [\"t-pose\", \"idle\", \"jumping\", \"walk\"];\r\n\r\nconst JUMP_FORCE = 80;\r\nconst BASE_MOVEMENT_SPEED = 50;\r\nconst MIN_SPEED_FOR_JUMP_ICE = 150;\r\n\r\nconst GROUND_HEIGHT = -80;\r\nconst EDGE = 360;\r\n\r\nconst usePengul = ({ pengulE, ref, animations, sounds, ...props }) => {\r\n  const raycast = useRaycast(pengulE, 55, new Vector3(1, -1, 0));\r\n\r\n  //캐릭터 상태관리\r\n  const isJumping = useRef(false);\r\n  const jumpNow = useRef(false);\r\n  const isGrounded = useRef(false);\r\n\r\n  const characterPosition = useRef([-EDGE, GROUND_HEIGHT, 0]);\r\n  const characterVelocity = useRef([0, 0, 0]);\r\n\r\n  //애니메이션 정보\r\n  const activeAnimation = useRef(0);\r\n\r\n  //else\r\n  // const { nodes, materials, animations } = useGLTF(PengulE);\r\n  const { actions } = useAnimations(animations, ref);\r\n\r\n  const gameStatus = useSelector((state) => state.gameStatus.status);\r\n  const dispatch = useDispatch();\r\n\r\n  const setActiveAnimation = useCallback(\r\n    (idx) => {\r\n      if (activeAnimation.current === idx) return;\r\n\r\n      actions[ANIMATIONS[activeAnimation.current]].fadeOut(0.3);\r\n      actions[ANIMATIONS[idx]].reset().fadeIn(0.3).play();\r\n\r\n      activeAnimation.current = idx;\r\n    },\r\n    [actions]\r\n  );\r\n\r\n  const doJump = useCallback(() => {\r\n    if (\r\n      isJumping.current === false &&\r\n      gameStatus === GameStatus.GAME_START &&\r\n      activeAnimation.current === 1\r\n    ) {\r\n      //점프 상태 관리\r\n      isJumping.current = true;\r\n      jumpNow.current = 1;\r\n\r\n      //점프 애니메이션 재생\r\n      setActiveAnimation(2);\r\n      setTimeout(() => {\r\n        setActiveAnimation(3);\r\n      }, 1000);\r\n    }\r\n  }, [gameStatus, setActiveAnimation]);\r\n\r\n  useEffect(() => {\r\n    //Add Jump\r\n    window.addEventListener(`keydown`, (e) => {\r\n      if (e.code === `Space`) {\r\n        e.preventDefault();\r\n        doJump();\r\n      }\r\n    });\r\n\r\n    window.doJump = doJump;\r\n\r\n    setActiveAnimation(1);\r\n\r\n    return () => {\r\n      activeAnimation.current = 0;\r\n      window.doJump = () => {\r\n        console.log(`not claim function`);\r\n      };\r\n    };\r\n  }, [doJump, setActiveAnimation]);\r\n\r\n  //update\r\n  useFrame((_, delta) => {\r\n    // if (gameStatus !== GameStatus.GAME_START) return;\r\n\r\n    if (characterPosition.current[1] < GROUND_HEIGHT && !isGrounded.current) {\r\n      isGrounded.current = true;\r\n      isJumping.current = false;\r\n    }\r\n\r\n    const newVelocity = velocityCalc(delta);\r\n\r\n    // console.log(newVelocity, characterPosition);\r\n\r\n    // console.log(pengulE.current);\r\n\r\n    if (characterPosition.current[0] >= EDGE) {\r\n      dispatch(gameStatusActions.goNextLevel());\r\n    }\r\n\r\n    const newPosition = [\r\n      characterPosition.current[0] < EDGE\r\n        ? characterPosition.current[0] + newVelocity[0] * delta\r\n        : -EDGE,\r\n      isGrounded.current\r\n        ? GROUND_HEIGHT\r\n        : characterPosition.current[1] + newVelocity[1] * delta,\r\n      characterPosition.current[2] + newVelocity[2] * delta,\r\n    ];\r\n\r\n    pengulE.current.position.set(\r\n      newPosition[0],\r\n      newPosition[1],\r\n      newPosition[2]\r\n    );\r\n    characterPosition.current = newPosition;\r\n  });\r\n\r\n  const velocityCalc = useCallback(\r\n    (delta) => {\r\n      const newVelocity = [...characterVelocity.current];\r\n\r\n      if (gameStatus !== GameStatus.GAME_START) return newVelocity;\r\n\r\n      //in Air\r\n      if (!isGrounded.current) {\r\n        newVelocity[0] = MIN_SPEED_FOR_JUMP_ICE;\r\n        newVelocity[1] += GRAVITY * delta;\r\n      } else {\r\n        //calc xVelocity\r\n        newVelocity[0] = BASE_MOVEMENT_SPEED;\r\n        newVelocity[1] = 0;\r\n\r\n        if (jumpNow.current) {\r\n          //jump\r\n          if (jumpNow.current === 1) {\r\n            //jump ready pose\r\n\r\n            //stop\r\n            newVelocity[0] = 0;\r\n\r\n            //ready for jump action  => go jump\r\n            if (actions[ANIMATIONS[activeAnimation.current]].time > 0.3)\r\n              jumpNow.current = 2;\r\n          } else if (jumpNow.current === 2) {\r\n            //do jump\r\n            newVelocity[1] += JUMP_FORCE;\r\n\r\n            //점프 소리 내기\r\n            sounds.jumpSound.current.play();\r\n\r\n            jumpNow.current = false;\r\n            isGrounded.current = false;\r\n          }\r\n        } else if (raycast().length < 3) {\r\n          //now edge\r\n          newVelocity[0] = 0;\r\n          setActiveAnimation(1);\r\n        } else {\r\n          //just walk\r\n          setActiveAnimation(3);\r\n        }\r\n      }\r\n\r\n      characterVelocity.current = newVelocity;\r\n\r\n      return newVelocity;\r\n    },\r\n    [raycast, setActiveAnimation, gameStatus, actions, sounds]\r\n  );\r\n};\r\n\r\nexport default usePengul;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}