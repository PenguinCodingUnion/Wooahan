{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Documents\\\\S08P31B206\\\\front\\\\src\\\\components\\\\gameSleigh\\\\QuizBox.jsx\",\n  _s = $RefreshSig$();\nimport { Edges, Image, Wireframe } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { useRef, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuizBox = props => {\n  _s();\n  const imgRef = useRef();\n  const x = 0;\n  const y = 0;\n  const width = 1;\n  const height = 1;\n  const radius = 0.25;\n  const shape = new THREE.Shape();\n  shape.lineTo(x, y + height - radius);\n  shape.quadraticCurveTo(x, y + height, x + radius, y + height);\n  shape.lineTo(x + width - radius, y + height);\n  shape.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\n  shape.lineTo(x + width, y + radius);\n  shape.quadraticCurveTo(x + width, y, x + width - radius, y);\n  shape.lineTo(x + radius, y);\n  shape.quadraticCurveTo(x, y, x, y + radius);\n  const geometry = new THREE.ShapeGeometry(shape);\n  const texture = new THREE.TextureLoader().load(props.quizData.url);\n  const [down, setDown] = useState(true);\n  useFrame((_ref, delta) => {\n    let {\n      clock\n    } = _ref;\n    if (down) {\n      imgRef.current.position.y -= delta * 5;\n      if (imgRef.current.position.y < 0) {\n        setDown(false);\n        if (props.setQuizStatus) props.setQuizStatus(\"stop\");\n      }\n    } else {\n      imgRef.current.position.y = Math.sin(clock.getElapsedTime() * 4) * 0.03;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: imgRef,\n      geometry: geometry,\n      scale: props.quizScale,\n      position: [props.side === \"left\" ? -props.quizScale * 2 : props.quizScale, 4, -1],\n      children: /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        map: texture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizBox, \"8TcS/Bxr94CC3A5g+De4gOTnaNM=\", false, function () {\n  return [useFrame];\n});\n_c = QuizBox;\nexport default QuizBox;\nvar _c;\n$RefreshReg$(_c, \"QuizBox\");","map":{"version":3,"names":["Edges","Image","Wireframe","useFrame","useRef","useState","THREE","jsxDEV","_jsxDEV","QuizBox","props","_s","imgRef","x","y","width","height","radius","shape","Shape","lineTo","quadraticCurveTo","geometry","ShapeGeometry","texture","TextureLoader","load","quizData","url","down","setDown","_ref","delta","clock","current","position","setQuizStatus","Math","sin","getElapsedTime","children","ref","scale","quizScale","side","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SSAFY/Documents/S08P31B206/front/src/components/gameSleigh/QuizBox.jsx"],"sourcesContent":["import { Edges, Image, Wireframe } from \"@react-three/drei\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useRef, useState } from \"react\";\r\nimport * as THREE from \"three\";\r\n\r\nexport const QuizBox = (props) => {\r\n  const imgRef = useRef();\r\n\r\n  const x = 0;\r\n  const y = 0;\r\n  const width = 1;\r\n  const height = 1;\r\n  const radius = 0.25;\r\n\r\n  const shape = new THREE.Shape();\r\n  shape.lineTo(x, y + height - radius);\r\n  shape.quadraticCurveTo(x, y + height, x + radius, y + height);\r\n  shape.lineTo(x + width - radius, y + height);\r\n  shape.quadraticCurveTo(x + width, y + height, x + width, y + height - radius);\r\n  shape.lineTo(x + width, y + radius);\r\n  shape.quadraticCurveTo(x + width, y, x + width - radius, y);\r\n  shape.lineTo(x + radius, y);\r\n  shape.quadraticCurveTo(x, y, x, y + radius);\r\n\r\n  const geometry = new THREE.ShapeGeometry(shape);\r\n\r\n  const texture = new THREE.TextureLoader().load(props.quizData.url);\r\n\r\n  const [down, setDown] = useState(true);\r\n\r\n  useFrame(({ clock }, delta) => {\r\n    if (down) {\r\n      imgRef.current.position.y -= delta * 5;\r\n      if (imgRef.current.position.y < 0) {\r\n        setDown(false);\r\n        if (props.setQuizStatus) props.setQuizStatus(\"stop\");\r\n      }\r\n    } else {\r\n      imgRef.current.position.y = Math.sin(clock.getElapsedTime() * 4) * 0.03;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group>\r\n      <mesh\r\n        ref={imgRef}\r\n        geometry={geometry}\r\n        scale={props.quizScale}\r\n        position={[\r\n          props.side === \"left\" ? -props.quizScale * 2 : props.quizScale,\r\n          4,\r\n          -1,\r\n        ]}\r\n      >\r\n        <meshBasicMaterial map={texture} />\r\n        {/* <Edges /> */}\r\n      </mesh>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default QuizBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}