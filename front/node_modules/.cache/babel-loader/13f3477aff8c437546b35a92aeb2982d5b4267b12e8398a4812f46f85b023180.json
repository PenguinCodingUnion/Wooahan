{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Documents\\\\S08P31B206\\\\front\\\\src\\\\pages\\\\GameSleigh.jsx\",\n  _s = $RefreshSig$();\nimport { Environment, Html, Image, Loader, OrbitControls, PerspectiveCamera, useProgress } from \"@react-three/drei\";\nimport { Canvas, useFrame, useLoader } from \"@react-three/fiber\";\nimport Model from \"components/gameSleigh/Model\";\nimport React, { Suspense, useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as THREE from \"three\";\nimport forestMap from \"assets/images/background_forest.png\";\nimport QuizBox from \"components/gameSleigh/QuizBox\";\nimport bfyImg from \"assets/images/bfy.png\";\nimport dogIMg from \"assets/images/dog.png\";\nimport { SleighLoading, LoadingProgress } from \"components/gameSleigh/Loading\";\nimport QuizResult from \"components/gameSleigh/QuizResult\";\nimport { useNavigate } from \"react-router-dom\";\nimport { sleighActions } from \"store/features/sliegh/sleighSlice\";\n\n//메인에서 클릭 시  -> 게임 단계 화면 -> 단계선택 -> 로딩화면 -> 게임시작 버튼 -> 클릭 시 게임시작 -> 캐릭터 걷기 -> 문제정보가 위에서 떨어짐\n// -> 캐릭터 멈춤 -> 자이로센서 값 받아서 캐릭터 이동 -> 정답 시 동그라미 보여주고 정보? -> 틀릴 시 X 하고 오답정보와 모션\n// -> 다음 문제 진행 -> 반복 -> 문제 3개 완료되면 완료화면 보여주고 별가루 하나 주던가하고 메인으로\n\n// 로딩화면 만들고 로딩 완료되면 시작버튼이 보여지게 해야 함 <- useProgress\n\n// 캔버스에 이미지 그려서 한다고하면... lookat으로 해당방향의 이미지 처다보게하고 걷게함\n// 그리고 기울이는 방향으로 캐릭터가 움직일지.. 아니면 그림이 움직여서 캐릭터로 오게할지..\n// raycaster로 그림에 닿는거를 판단하던지 아니면 포지션위치가 같아지는 거로 정답 판단하면 될듯\n// ㅅㅂ 개어렵네 이미지 네모깍는거만 하루종일햇네 ㅅㅂ\n\n// 캔버스의 이미지를 안쓴다면 이미지가 가운데로 이동하는 거로해서 가운뎅왓을때 정답체크해야할듯\n\n// 만약 캔버스에 안그리는 거면 펭귄이 어디쯤 갓을때 정답인지 판단하기 힘듬..\n// 화면 크기, 비율별로 펭귄이 움직여야하는 거리가 달라짐...\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const STAGE_DATA = [[[{\n  quiz: \"나비\"\n}, {\n  word: \"나비\",\n  url: bfyImg,\n  answer: true\n}, {\n  word: \"강아지\",\n  url: dogIMg,\n  answer: false\n}], [{\n  quiz: \"도그\"\n}, {\n  word: \"도그\",\n  url: dogIMg,\n  answer: true\n}, {\n  word: \"버터\",\n  url: bfyImg,\n  answer: false\n}], [{\n  quiz: \"호랑나비\"\n}, {\n  word: \"호랑나비\",\n  url: bfyImg,\n  answer: true\n}, {\n  word: \"웰시코기\",\n  url: dogIMg,\n  answer: false\n}]], [[{\n  quiz: \"고고고\"\n}, {\n  word: \"고고고\",\n  url: bfyImg,\n  answer: true\n}, {\n  word: \"가가가\",\n  url: dogIMg,\n  answer: false\n}], [{\n  quiz: \"123\"\n}, {\n  word: \"그33\",\n  url: dogIMg,\n  answer: true\n}, {\n  word: \"버터\",\n  url: bfyImg,\n  answer: false\n}], [{\n  quiz: \"2322\"\n}, {\n  word: \"2322\",\n  url: bfyImg,\n  answer: true\n}, {\n  word: \"132\",\n  url: dogIMg,\n  answer: false\n}]]];\nconst GameSleigh = () => {\n  _s();\n  // 게임 진행 관련 State\n  const [isLoading, setIsLoading] = useState(true); // 로딩\n  const [isStart, setIsStart] = useState(false); // 게임 시작\n  const [isEnd, setIsEnd] = useState(false); // 게임 종료\n  const [quizStatus, setQuizStatus] = useState(\"idle\"); // 퀴즈 상태 idle(대기) start(퀴즈내려옴) stop(퀴즈맞추기) check(정답확인)\n  const [quizCount, setQuizCount] = useState(0);\n  const [quizResult, setQuizResult] = useState(\"left\"); // left right\n\n  const dispatch = useDispatch();\n  const navigation = useNavigate();\n  const [random, setRandom] = useState([Math.random(), Math.random(), Math.random()]);\n\n  // stage 단계 정보\n  const stageLevel = useSelector(state => {\n    return state.sleigh.stageLevel;\n  });\n\n  // 게임 배경 Texture 로딩 및 색상 인코딩\n  const texture = new THREE.TextureLoader().load(forestMap);\n  texture.encoding = THREE.sRGBEncoding;\n\n  // 캐릭터 Ref\n  const modelRef = useRef();\n\n  // 캐릭터 애니메이션\n  const [modelAnimations, setModelAnimations] = useState(null);\n\n  // 게임 시작 시\n  useEffect(() => {\n    if (!modelAnimations || !isStart) return;\n    const {\n      actions,\n      mixer,\n      names\n    } = modelAnimations;\n    actions[names[3]].reset().fadeIn(0.2).play();\n    setTimeout(() => {\n      setQuizStatus(\"start\");\n    }, 2000);\n    return () => {\n      names.forEach(element => {\n        actions[element].reset().fadeOut(0.5).stop();\n      });\n    };\n  }, [isStart]);\n  useEffect(() => {\n    if (quizStatus === \"idle\") return;\n    const {\n      actions,\n      mixer,\n      names\n    } = modelAnimations;\n    const stopActions = () => {\n      names.forEach(element => {\n        actions[element].stop();\n      });\n    };\n    const onKeyDown = e => {\n      e.preventDefault();\n      if (e.key === \"ArrowLeft\") {\n        modelAnimations.mixer.timeScale = 1.5;\n        modelRef.current.position.x -= 0.06;\n        modelRef.current.rotation.y = Math.PI / 2;\n        actions[names[3]].play();\n      } else if (e.key === \"ArrowRight\") {\n        modelAnimations.mixer.timeScale = 1.5;\n        modelRef.current.position.x += 0.06;\n        modelRef.current.rotation.y = -Math.PI / 2;\n        actions[names[3]].play();\n      }\n    };\n    const onKeyUp = e => {\n      e.preventDefault();\n      if (e.key === \"ArrowLeft\") {\n        actions[names[3]].reset().fadeOut(0.5).stop();\n        modelRef.current.rotation.y = Math.PI;\n        modelAnimations.mixer.timeScale = 1;\n      } else if (e.key === \"ArrowRight\") {\n        actions[names[3]].reset().fadeOut(0.5).stop();\n        modelRef.current.rotation.y = Math.PI;\n        modelAnimations.mixer.timeScale = 1;\n      }\n    };\n\n    // 다음 문제\n    if (quizStatus === \"nextQuiz\") {\n      stopActions();\n      if (quizCount < 3) {\n        modelRef.current.rotation.y = 0;\n        actions[names[3]].reset().fadeIn(0.2).play();\n        setTimeout(() => {\n          setQuizStatus(\"start\");\n        }, 2000);\n      } else {\n        actions[names[1]].reset().fadeIn(0.2).play();\n        setQuizStatus(\"idle\");\n        setQuizCount(0);\n        setIsEnd(true);\n      }\n    }\n\n    // 문제 시작\n    if (quizStatus === \"stop\") {\n      stopActions();\n      modelRef.current.rotation.y = Math.PI;\n      document.addEventListener(\"keydown\", onKeyDown);\n      document.addEventListener(\"keyup\", onKeyUp);\n      actions[names[0]].fadeIn(0.2).play();\n    }\n\n    // 정답 확인\n    if (quizStatus === \"check\") {\n      stopActions();\n      modelRef.current.rotation.y = Math.PI;\n      modelRef.current.position.x = 0;\n      actions[names[0]].fadeIn(0.2).play();\n    }\n    return () => {\n      document.removeEventListener(\"keydown\", onKeyDown);\n      document.removeEventListener(\"keyup\", onKeyUp);\n    };\n  }, [quizStatus]);\n\n  // 카메라 설정\n  const camera = {\n    fov: 80,\n    aspect: window.innerWidth / window.innerHeight / 2,\n    position: [0, 0, 3]\n  };\n  const quizScale = window.innerWidth / window.innerHeight * 1.25;\n  useEffect(() => {\n    if (+quizCount === 3) {}\n  }, [quizCount]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-auto h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(Canvas, {\n        children: [/*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: null,\n          children: [/*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n            ...camera,\n            makeDefault: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Model, {\n            modelRef: modelRef,\n            quizScale: quizScale,\n            quizStatus: quizStatus,\n            setQuizResult: setQuizResult,\n            setQuizStatus: setQuizStatus,\n            setModelAnimations: setModelAnimations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), quizStatus !== \"idle\" && quizStatus !== \"nextQuiz\" && quizCount < 3 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(QuizBox, {\n              side: \"left\",\n              setQuizStatus: setQuizStatus,\n              quizScale: quizScale,\n              quizData: random[quizCount] > 0.5 ? STAGE_DATA[stageLevel][quizCount][1] : STAGE_DATA[stageLevel][quizCount][2]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(QuizBox, {\n              side: \"right\",\n              quizScale: quizScale,\n              quizData: random[quizCount] > 0.5 ? STAGE_DATA[stageLevel][quizCount][2] : STAGE_DATA[stageLevel][quizCount][1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Environment, {\n            background: true,\n            map: texture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingProgress, {\n          setIsLoading: setIsLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), quizStatus === \"stop\" && quizCount < 3 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            top: 10,\n            background: \"#d9d9d9\",\n            left: \"50%\",\n            fontSize: \"40px\"\n          },\n          children: STAGE_DATA[stageLevel][quizCount][0].quiz\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), isLoading && /*#__PURE__*/_jsxDEV(SleighLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 23\n      }, this), !isLoading && !isStart && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          background: \"blue\",\n          textAlign: \"center\",\n          top: \"50%\",\n          left: \"50%\"\n        },\n        onClick: () => {\n          setIsStart(!isStart);\n        },\n        children: \"\\uC2DC\\uC791\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), quizStatus === \"check\" && /*#__PURE__*/_jsxDEV(QuizResult, {\n        setQuizStatus: setQuizStatus,\n        setQuizCount: setQuizCount,\n        result: quizResult === \"left\" ? STAGE_DATA[stageLevel][quizCount][random[quizCount] > 0.5 ? 1 : 2] : STAGE_DATA[stageLevel][quizCount][random[quizCount] > 0.5 ? 2 : 1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this), isEnd && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            dispatch(sleighActions.setStage(stageLevel + 1));\n            setIsEnd(false);\n            setIsStart(false);\n            setIsLoading(true);\n          },\n          children: \"\\uB2E4\\uC74C \\uB2E8\\uACC4\\uB85C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setIsEnd(false);\n            setIsStart(false);\n            setIsLoading(true);\n          },\n          children: \"\\uB2E4\\uC2DC\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            navigation(\"/\");\n          },\n          children: \"\\uBA54\\uC778\\uC73C\\uB85C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(GameSleigh, \"bHssARwTL3CCA60avvxQH4ULurI=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = GameSleigh;\nexport default GameSleigh;\nvar _c;\n$RefreshReg$(_c, \"GameSleigh\");","map":{"version":3,"names":["Environment","Html","Image","Loader","OrbitControls","PerspectiveCamera","useProgress","Canvas","useFrame","useLoader","Model","React","Suspense","useEffect","useRef","useState","useDispatch","useSelector","THREE","forestMap","QuizBox","bfyImg","dogIMg","SleighLoading","LoadingProgress","QuizResult","useNavigate","sleighActions","jsxDEV","_jsxDEV","Fragment","_Fragment","STAGE_DATA","quiz","word","url","answer","GameSleigh","_s","isLoading","setIsLoading","isStart","setIsStart","isEnd","setIsEnd","quizStatus","setQuizStatus","quizCount","setQuizCount","quizResult","setQuizResult","dispatch","navigation","random","setRandom","Math","stageLevel","state","sleigh","texture","TextureLoader","load","encoding","sRGBEncoding","modelRef","modelAnimations","setModelAnimations","actions","mixer","names","reset","fadeIn","play","setTimeout","forEach","element","fadeOut","stop","stopActions","onKeyDown","e","preventDefault","key","timeScale","current","position","x","rotation","y","PI","onKeyUp","document","addEventListener","removeEventListener","camera","fov","aspect","window","innerWidth","innerHeight","quizScale","children","className","fallback","makeDefault","fileName","_jsxFileName","lineNumber","columnNumber","side","quizData","background","map","style","top","left","fontSize","textAlign","onClick","result","setStage","_c","$RefreshReg$"],"sources":["C:/Users/SSAFY/Documents/S08P31B206/front/src/pages/GameSleigh.jsx"],"sourcesContent":["import {\r\n  Environment,\r\n  Html,\r\n  Image,\r\n  Loader,\r\n  OrbitControls,\r\n  PerspectiveCamera,\r\n  useProgress,\r\n} from \"@react-three/drei\";\r\nimport { Canvas, useFrame, useLoader } from \"@react-three/fiber\";\r\nimport Model from \"components/gameSleigh/Model\";\r\nimport React, { Suspense, useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as THREE from \"three\";\r\nimport forestMap from \"assets/images/background_forest.png\";\r\nimport QuizBox from \"components/gameSleigh/QuizBox\";\r\nimport bfyImg from \"assets/images/bfy.png\";\r\nimport dogIMg from \"assets/images/dog.png\";\r\nimport { SleighLoading, LoadingProgress } from \"components/gameSleigh/Loading\";\r\nimport QuizResult from \"components/gameSleigh/QuizResult\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { sleighActions } from \"store/features/sliegh/sleighSlice\";\r\n\r\n//메인에서 클릭 시  -> 게임 단계 화면 -> 단계선택 -> 로딩화면 -> 게임시작 버튼 -> 클릭 시 게임시작 -> 캐릭터 걷기 -> 문제정보가 위에서 떨어짐\r\n// -> 캐릭터 멈춤 -> 자이로센서 값 받아서 캐릭터 이동 -> 정답 시 동그라미 보여주고 정보? -> 틀릴 시 X 하고 오답정보와 모션\r\n// -> 다음 문제 진행 -> 반복 -> 문제 3개 완료되면 완료화면 보여주고 별가루 하나 주던가하고 메인으로\r\n\r\n// 로딩화면 만들고 로딩 완료되면 시작버튼이 보여지게 해야 함 <- useProgress\r\n\r\n// 캔버스에 이미지 그려서 한다고하면... lookat으로 해당방향의 이미지 처다보게하고 걷게함\r\n// 그리고 기울이는 방향으로 캐릭터가 움직일지.. 아니면 그림이 움직여서 캐릭터로 오게할지..\r\n// raycaster로 그림에 닿는거를 판단하던지 아니면 포지션위치가 같아지는 거로 정답 판단하면 될듯\r\n// ㅅㅂ 개어렵네 이미지 네모깍는거만 하루종일햇네 ㅅㅂ\r\n\r\n// 캔버스의 이미지를 안쓴다면 이미지가 가운데로 이동하는 거로해서 가운뎅왓을때 정답체크해야할듯\r\n\r\n// 만약 캔버스에 안그리는 거면 펭귄이 어디쯤 갓을때 정답인지 판단하기 힘듬..\r\n// 화면 크기, 비율별로 펭귄이 움직여야하는 거리가 달라짐...\r\n\r\nexport const STAGE_DATA = [\r\n  [\r\n    [\r\n      { quiz: \"나비\" },\r\n      { word: \"나비\", url: bfyImg, answer: true },\r\n      { word: \"강아지\", url: dogIMg, answer: false },\r\n    ],\r\n    [\r\n      { quiz: \"도그\" },\r\n      { word: \"도그\", url: dogIMg, answer: true },\r\n      { word: \"버터\", url: bfyImg, answer: false },\r\n    ],\r\n    [\r\n      { quiz: \"호랑나비\" },\r\n      { word: \"호랑나비\", url: bfyImg, answer: true },\r\n      { word: \"웰시코기\", url: dogIMg, answer: false },\r\n    ],\r\n  ],\r\n  [\r\n    [\r\n      { quiz: \"고고고\" },\r\n      { word: \"고고고\", url: bfyImg, answer: true },\r\n      { word: \"가가가\", url: dogIMg, answer: false },\r\n    ],\r\n    [\r\n      { quiz: \"123\" },\r\n      { word: \"그33\", url: dogIMg, answer: true },\r\n      { word: \"버터\", url: bfyImg, answer: false },\r\n    ],\r\n    [\r\n      { quiz: \"2322\" },\r\n      { word: \"2322\", url: bfyImg, answer: true },\r\n      { word: \"132\", url: dogIMg, answer: false },\r\n    ],\r\n  ],\r\n];\r\n\r\nconst GameSleigh = () => {\r\n  // 게임 진행 관련 State\r\n  const [isLoading, setIsLoading] = useState(true); // 로딩\r\n  const [isStart, setIsStart] = useState(false); // 게임 시작\r\n  const [isEnd, setIsEnd] = useState(false); // 게임 종료\r\n  const [quizStatus, setQuizStatus] = useState(\"idle\"); // 퀴즈 상태 idle(대기) start(퀴즈내려옴) stop(퀴즈맞추기) check(정답확인)\r\n  const [quizCount, setQuizCount] = useState(0);\r\n  const [quizResult, setQuizResult] = useState(\"left\"); // left right\r\n\r\n  const dispatch = useDispatch();\r\n  const navigation = useNavigate();\r\n\r\n  const [random, setRandom] = useState([\r\n    Math.random(),\r\n    Math.random(),\r\n    Math.random(),\r\n  ]);\r\n\r\n  // stage 단계 정보\r\n  const stageLevel = useSelector((state) => {\r\n    return state.sleigh.stageLevel;\r\n  });\r\n\r\n  // 게임 배경 Texture 로딩 및 색상 인코딩\r\n  const texture = new THREE.TextureLoader().load(forestMap);\r\n  texture.encoding = THREE.sRGBEncoding;\r\n\r\n  // 캐릭터 Ref\r\n  const modelRef = useRef();\r\n\r\n  // 캐릭터 애니메이션\r\n  const [modelAnimations, setModelAnimations] = useState(null);\r\n\r\n  // 게임 시작 시\r\n  useEffect(() => {\r\n    if (!modelAnimations || !isStart) return;\r\n\r\n    const { actions, mixer, names } = modelAnimations;\r\n\r\n    actions[names[3]].reset().fadeIn(0.2).play();\r\n\r\n    setTimeout(() => {\r\n      setQuizStatus(\"start\");\r\n    }, 2000);\r\n\r\n    return () => {\r\n      names.forEach((element) => {\r\n        actions[element].reset().fadeOut(0.5).stop();\r\n      });\r\n    };\r\n  }, [isStart]);\r\n\r\n  useEffect(() => {\r\n    if (quizStatus === \"idle\") return;\r\n\r\n    const { actions, mixer, names } = modelAnimations;\r\n\r\n    const stopActions = () => {\r\n      names.forEach((element) => {\r\n        actions[element].stop();\r\n      });\r\n    };\r\n\r\n    const onKeyDown = (e) => {\r\n      e.preventDefault();\r\n      if (e.key === \"ArrowLeft\") {\r\n        modelAnimations.mixer.timeScale = 1.5;\r\n        modelRef.current.position.x -= 0.06;\r\n        modelRef.current.rotation.y = Math.PI / 2;\r\n        actions[names[3]].play();\r\n      } else if (e.key === \"ArrowRight\") {\r\n        modelAnimations.mixer.timeScale = 1.5;\r\n        modelRef.current.position.x += 0.06;\r\n        modelRef.current.rotation.y = -Math.PI / 2;\r\n        actions[names[3]].play();\r\n      }\r\n    };\r\n\r\n    const onKeyUp = (e) => {\r\n      e.preventDefault();\r\n      if (e.key === \"ArrowLeft\") {\r\n        actions[names[3]].reset().fadeOut(0.5).stop();\r\n        modelRef.current.rotation.y = Math.PI;\r\n        modelAnimations.mixer.timeScale = 1;\r\n      } else if (e.key === \"ArrowRight\") {\r\n        actions[names[3]].reset().fadeOut(0.5).stop();\r\n        modelRef.current.rotation.y = Math.PI;\r\n        modelAnimations.mixer.timeScale = 1;\r\n      }\r\n    };\r\n\r\n    // 다음 문제\r\n    if (quizStatus === \"nextQuiz\") {\r\n      stopActions();\r\n\r\n      if (quizCount < 3) {\r\n        modelRef.current.rotation.y = 0;\r\n        actions[names[3]].reset().fadeIn(0.2).play();\r\n\r\n        setTimeout(() => {\r\n          setQuizStatus(\"start\");\r\n        }, 2000);\r\n      } else {\r\n        actions[names[1]].reset().fadeIn(0.2).play();\r\n        setQuizStatus(\"idle\");\r\n        setQuizCount(0);\r\n        setIsEnd(true);\r\n      }\r\n    }\r\n\r\n    // 문제 시작\r\n    if (quizStatus === \"stop\") {\r\n      stopActions();\r\n      modelRef.current.rotation.y = Math.PI;\r\n\r\n      document.addEventListener(\"keydown\", onKeyDown);\r\n      document.addEventListener(\"keyup\", onKeyUp);\r\n\r\n      actions[names[0]].fadeIn(0.2).play();\r\n    }\r\n\r\n    // 정답 확인\r\n    if (quizStatus === \"check\") {\r\n      stopActions();\r\n      modelRef.current.rotation.y = Math.PI;\r\n      modelRef.current.position.x = 0;\r\n      actions[names[0]].fadeIn(0.2).play();\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", onKeyDown);\r\n      document.removeEventListener(\"keyup\", onKeyUp);\r\n    };\r\n  }, [quizStatus]);\r\n\r\n  // 카메라 설정\r\n  const camera = {\r\n    fov: 80,\r\n    aspect: window.innerWidth / window.innerHeight / 2,\r\n    position: [0, 0, 3],\r\n  };\r\n\r\n  const quizScale = (window.innerWidth / window.innerHeight) * 1.25;\r\n\r\n  useEffect(() => {\r\n    if (+quizCount === 3) {\r\n    }\r\n  }, [quizCount]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mx-auto h-screen\">\r\n        <Canvas>\r\n          <Suspense fallback={null}>\r\n            <PerspectiveCamera {...camera} makeDefault />\r\n            <Model\r\n              modelRef={modelRef}\r\n              quizScale={quizScale}\r\n              quizStatus={quizStatus}\r\n              setQuizResult={setQuizResult}\r\n              setQuizStatus={setQuizStatus}\r\n              setModelAnimations={setModelAnimations}\r\n            />\r\n            <ambientLight />\r\n            {quizStatus !== \"idle\" &&\r\n              quizStatus !== \"nextQuiz\" &&\r\n              quizCount < 3 && (\r\n                <>\r\n                  <QuizBox\r\n                    side=\"left\"\r\n                    setQuizStatus={setQuizStatus}\r\n                    quizScale={quizScale}\r\n                    quizData={\r\n                      random[quizCount] > 0.5\r\n                        ? STAGE_DATA[stageLevel][quizCount][1]\r\n                        : STAGE_DATA[stageLevel][quizCount][2]\r\n                    }\r\n                  />\r\n                  <QuizBox\r\n                    side=\"right\"\r\n                    quizScale={quizScale}\r\n                    quizData={\r\n                      random[quizCount] > 0.5\r\n                        ? STAGE_DATA[stageLevel][quizCount][2]\r\n                        : STAGE_DATA[stageLevel][quizCount][1]\r\n                    }\r\n                  />\r\n                </>\r\n              )}\r\n            <Environment background={true} map={texture} />\r\n          </Suspense>\r\n          {isLoading && <LoadingProgress setIsLoading={setIsLoading} />}\r\n        </Canvas>\r\n        {quizStatus === \"stop\" && quizCount < 3 && (\r\n          <>\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                top: 10,\r\n                background: \"#d9d9d9\",\r\n                left: \"50%\",\r\n                fontSize: \"40px\",\r\n              }}\r\n            >\r\n              {STAGE_DATA[stageLevel][quizCount][0].quiz}\r\n            </div>\r\n          </>\r\n        )}\r\n        {isLoading && <SleighLoading />}\r\n        {!isLoading && !isStart && (\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              background: \"blue\",\r\n              textAlign: \"center\",\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n            }}\r\n            onClick={() => {\r\n              setIsStart(!isStart);\r\n            }}\r\n          >\r\n            시작하기\r\n          </div>\r\n        )}\r\n        {quizStatus === \"check\" && (\r\n          <QuizResult\r\n            setQuizStatus={setQuizStatus}\r\n            setQuizCount={setQuizCount}\r\n            result={\r\n              quizResult === \"left\"\r\n                ? STAGE_DATA[stageLevel][quizCount][\r\n                    random[quizCount] > 0.5 ? 1 : 2\r\n                  ]\r\n                : STAGE_DATA[stageLevel][quizCount][\r\n                    random[quizCount] > 0.5 ? 2 : 1\r\n                  ]\r\n            }\r\n          />\r\n        )}\r\n        {isEnd && (\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                dispatch(sleighActions.setStage(stageLevel + 1));\r\n                setIsEnd(false);\r\n                setIsStart(false);\r\n                setIsLoading(true);\r\n              }}\r\n            >\r\n              다음 단계로\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                setIsEnd(false);\r\n                setIsStart(false);\r\n                setIsLoading(true);\r\n              }}\r\n            >\r\n              다시하기\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                navigation(\"/\");\r\n              }}\r\n            >\r\n              메인으로\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameSleigh;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}