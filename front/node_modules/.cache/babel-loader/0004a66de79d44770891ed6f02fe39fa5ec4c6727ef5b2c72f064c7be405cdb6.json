{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Documents\\\\S08P31B206\\\\front\\\\src\\\\pages\\\\GameJump.jsx\",\n  _s = $RefreshSig$();\nimport { Canvas } from \"@react-three/fiber\";\n// import PropTypes from \"prop-types\";\nimport React, { Suspense, useCallback, useEffect, useRef, useState } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { PengulModel } from \"components/gameJump/Pengul\";\nimport FallowCamera from \"components/gameJump/FollowCamera\";\nimport { IceModel } from \"components/gameJump/IcePannel\";\nimport BackgroundImage from \"components/gameJump/BackgroundImage\";\nimport bgImage from \"assets/images/background/background_iceberg.png\";\nimport WaterFloor from \"components/gameJump/WaterFloor\";\nimport GameJumpOverlay from \"components/gameJump/GameJumpOverlay\";\nimport { gameStatusActions } from \"store/features/gameStatus/gameStatusSlice\";\nimport TextObject from \"components/gameJump/TextObject\";\nimport { GameStatus } from \"util/Enums.ts\";\nimport { Navigate } from \"react-router-dom\";\nimport LoadingComponent from \"components/common/LoadingComponent\";\n\n//test code\nimport first_1 from \"assets/sounds/test/1_1_엄마랑.mp3\";\nimport first_2 from \"assets/sounds/test/1_2_공원에.mp3\";\nimport first_3 from \"assets/sounds/test/1_3_놀러.mp3\";\nimport first_4 from \"assets/sounds/test/1_4_가요.mp3\";\nimport { jumpActions } from \"store/features/jump/jumpSlice\";\n\n//test code is end\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BOTTOM_POSITION = -70;\nconst SHORTEST_DISTANCE_FOR_JUMP = 50;\nconst TEST_PROBLEM = [[{\n  word: `개구리가`\n}, {\n  word: `폴짝폴짝`\n}, {\n  word: `뛰어요`\n}], [{\n  word: `엄마랑`,\n  url: first_1\n}, {\n  word: `공원에`,\n  url: first_2\n}, {\n  word: `놀러`,\n  url: first_3\n}, {\n  word: `가요`,\n  url: first_4\n}]];\nconst LAST_LEVEL = TEST_PROBLEM.length;\nexport const GameJump = props => {\n  _s();\n  const character = useRef();\n  const dispatch = useDispatch();\n  const gameStatus = useSelector(state => state.gameStatus.status);\n  const level = useSelector(state => state.gameStatus.level);\n  const [isLoading, setIsLoading] = useState(true);\n  const [problems, setProblems] = useState(TEST_PROBLEM ? TEST_PROBLEM : [[]]);\n  let lastIcePosition = -325;\n  useEffect(() => {\n    //실제로는 비동기 통신이 이루어지면서 게임 데이터를 로딩한다\n    dispatch(gameStatusActions.loaded());\n\n    //clear\n    return () => {\n      dispatch(gameStatusActions.clearLevel());\n      dispatch(jumpActions.setAction(-1));\n    };\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(jumpActions.setAction(0));\n  }, [dispatch, level]);\n  const startGame = useCallback(() => {\n    dispatch(gameStatusActions.start());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: level >= LAST_LEVEL ? /*#__PURE__*/_jsxDEV(Navigate, {\n      to: `/ending`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    //750 length\n    _jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(LoadingComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }, this),\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(LoadingComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(GameJumpOverlay, {\n        startGame: startGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n        onCreated: () => {\n          setIsLoading(false);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n          args: [\"white\", 1.5],\n          castShadow: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BackgroundImage, {\n          imagePath: bgImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FallowCamera, {\n          target: character\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WaterFloor, {\n          bottom: BOTTOM_POSITION\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PengulModel, {\n          ref: character,\n          bottom: BOTTOM_POSITION\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IceModel, {\n          icePosition: -375,\n          bottom: BOTTOM_POSITION\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IceModel, {\n          icePosition: 375,\n          bottom: BOTTOM_POSITION\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), gameStatus === GameStatus.GAME_START && problems[level].map((el, idx) => {\n          const length = (750 - SHORTEST_DISTANCE_FOR_JUMP * (problems[level].length - 1)) / problems[level].length;\n          lastIcePosition += length + SHORTEST_DISTANCE_FOR_JUMP;\n          if (idx === 0) {\n            lastIcePosition -= length;\n          }\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TextObject, {\n              text: el.word,\n              url: el.url,\n              no: idx,\n              position: [lastIcePosition - 75, 150, 0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(IceModel, {\n              icePosition: lastIcePosition,\n              bottom: BOTTOM_POSITION,\n              length: length / 15\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 21\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(GameJump, \"N/2NToNNc7eUlBqX7RRi0/bj0Ao=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = GameJump;\nGameJump.propTypes = {\n  // gameStatus: PropTypes.number.isRequired,\n};\nconst mapStateToProps = () => ({});\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(GameJump);\nvar _c;\n$RefreshReg$(_c, \"GameJump\");","map":{"version":3,"names":["Canvas","React","Suspense","useCallback","useEffect","useRef","useState","connect","useDispatch","useSelector","PengulModel","FallowCamera","IceModel","BackgroundImage","bgImage","WaterFloor","GameJumpOverlay","gameStatusActions","TextObject","GameStatus","Navigate","LoadingComponent","first_1","first_2","first_3","first_4","jumpActions","jsxDEV","_jsxDEV","Fragment","_Fragment","BOTTOM_POSITION","SHORTEST_DISTANCE_FOR_JUMP","TEST_PROBLEM","word","url","LAST_LEVEL","length","GameJump","props","_s","character","dispatch","gameStatus","state","status","level","isLoading","setIsLoading","problems","setProblems","lastIcePosition","loaded","clearLevel","setAction","startGame","start","children","to","fileName","_jsxFileName","lineNumber","columnNumber","fallback","onCreated","args","castShadow","imagePath","target","bottom","ref","icePosition","GAME_START","map","el","idx","text","no","position","_c","propTypes","mapStateToProps","mapDispatchToProps","$RefreshReg$"],"sources":["C:/Users/SSAFY/Documents/S08P31B206/front/src/pages/GameJump.jsx"],"sourcesContent":["import { Canvas } from \"@react-three/fiber\";\r\n// import PropTypes from \"prop-types\";\r\nimport React, {\r\n  Suspense,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { PengulModel } from \"components/gameJump/Pengul\";\r\nimport FallowCamera from \"components/gameJump/FollowCamera\";\r\nimport { IceModel } from \"components/gameJump/IcePannel\";\r\nimport BackgroundImage from \"components/gameJump/BackgroundImage\";\r\n\r\nimport bgImage from \"assets/images/background/background_iceberg.png\";\r\nimport WaterFloor from \"components/gameJump/WaterFloor\";\r\nimport GameJumpOverlay from \"components/gameJump/GameJumpOverlay\";\r\nimport { gameStatusActions } from \"store/features/gameStatus/gameStatusSlice\";\r\nimport TextObject from \"components/gameJump/TextObject\";\r\n\r\nimport { GameStatus } from \"util/Enums.ts\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport LoadingComponent from \"components/common/LoadingComponent\";\r\n\r\n//test code\r\nimport first_1 from \"assets/sounds/test/1_1_엄마랑.mp3\";\r\nimport first_2 from \"assets/sounds/test/1_2_공원에.mp3\";\r\nimport first_3 from \"assets/sounds/test/1_3_놀러.mp3\";\r\nimport first_4 from \"assets/sounds/test/1_4_가요.mp3\";\r\nimport { jumpActions } from \"store/features/jump/jumpSlice\";\r\n\r\n//test code is end\r\n\r\nconst BOTTOM_POSITION = -70;\r\nconst SHORTEST_DISTANCE_FOR_JUMP = 50;\r\n\r\nconst TEST_PROBLEM = [\r\n  [{ word: `개구리가` }, { word: `폴짝폴짝` }, { word: `뛰어요` }],\r\n  [\r\n    { word: `엄마랑`, url: first_1 },\r\n    { word: `공원에`, url: first_2 },\r\n    { word: `놀러`, url: first_3 },\r\n    { word: `가요`, url: first_4 },\r\n  ],\r\n];\r\nconst LAST_LEVEL = TEST_PROBLEM.length;\r\n\r\nexport const GameJump = (props) => {\r\n  const character = useRef();\r\n  const dispatch = useDispatch();\r\n  const gameStatus = useSelector((state) => state.gameStatus.status);\r\n\r\n  const level = useSelector((state) => state.gameStatus.level);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [problems, setProblems] = useState(TEST_PROBLEM ? TEST_PROBLEM : [[]]);\r\n\r\n  let lastIcePosition = -325;\r\n\r\n  useEffect(() => {\r\n    //실제로는 비동기 통신이 이루어지면서 게임 데이터를 로딩한다\r\n    dispatch(gameStatusActions.loaded());\r\n\r\n    //clear\r\n    return () => {\r\n      dispatch(gameStatusActions.clearLevel());\r\n      dispatch(jumpActions.setAction(-1));\r\n    };\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(jumpActions.setAction(0));\r\n  }, [dispatch, level]);\r\n\r\n  const startGame = useCallback(() => {\r\n    dispatch(gameStatusActions.start());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {level >= LAST_LEVEL ? (\r\n        <Navigate to={`/ending`} />\r\n      ) : (\r\n        //750 length\r\n        <Suspense fallback={<LoadingComponent />}>\r\n          {isLoading ? (\r\n            <LoadingComponent />\r\n          ) : (\r\n            <GameJumpOverlay startGame={startGame} />\r\n          )}\r\n          <Canvas\r\n            onCreated={() => {\r\n              setIsLoading(false);\r\n            }}\r\n          >\r\n            {/** 배경설정 */}\r\n            {/* <OrbitControls /> */}\r\n            <ambientLight args={[\"white\", 1.5]} castShadow />\r\n            <BackgroundImage imagePath={bgImage} />\r\n            <FallowCamera target={character} />\r\n            <WaterFloor bottom={BOTTOM_POSITION} />\r\n\r\n            {/** 캐릭터 모델 */}\r\n            <PengulModel ref={character} bottom={BOTTOM_POSITION} />\r\n\r\n            {/** 고정 오브젝트 */}\r\n            <IceModel icePosition={-375} bottom={BOTTOM_POSITION} />\r\n            <IceModel icePosition={375} bottom={BOTTOM_POSITION} />\r\n\r\n            {/** 동적 오브젝트 */}\r\n            {gameStatus === GameStatus.GAME_START &&\r\n              problems[level].map((el, idx) => {\r\n                const length =\r\n                  (750 -\r\n                    SHORTEST_DISTANCE_FOR_JUMP * (problems[level].length - 1)) /\r\n                  problems[level].length;\r\n\r\n                lastIcePosition += length + SHORTEST_DISTANCE_FOR_JUMP;\r\n\r\n                if (idx === 0) {\r\n                  lastIcePosition -= length;\r\n                }\r\n\r\n                return (\r\n                  <React.Fragment key={idx}>\r\n                    <TextObject\r\n                      text={el.word}\r\n                      url={el.url}\r\n                      no={idx}\r\n                      position={[lastIcePosition - 75, 150, 0]}\r\n                    />\r\n                    <IceModel\r\n                      icePosition={lastIcePosition}\r\n                      bottom={BOTTOM_POSITION}\r\n                      length={length / 15}\r\n                    />\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n          </Canvas>\r\n        </Suspense>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nGameJump.propTypes = {\r\n  // gameStatus: PropTypes.number.isRequired,\r\n};\r\n\r\nconst mapStateToProps = () => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GameJump);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}