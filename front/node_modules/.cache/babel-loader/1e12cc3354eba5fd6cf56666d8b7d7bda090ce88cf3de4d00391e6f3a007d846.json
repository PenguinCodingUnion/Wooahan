{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Documents\\\\S08P31B206\\\\front\\\\src\\\\pages\\\\GameSleigh.jsx\",\n  _s = $RefreshSig$();\nimport { Environment, Html, Image, Loader, OrbitControls, PerspectiveCamera, useProgress } from \"@react-three/drei\";\nimport { Canvas, useFrame, useLoader } from \"@react-three/fiber\";\nimport Model from \"components/gameSleigh/Model\";\nimport React, { Suspense, useCallback, useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as THREE from \"three\";\nimport forestMap from \"assets/images/background_forest.png\";\nimport QuizCard from \"components/gameSleigh/QuizCard\";\nimport bfyImg from \"assets/images/bfy.png\";\nimport dogIMg from \"assets/images/dog.png\";\nimport { SleighLoading, LoadingProgress } from \"components/gameSleigh/Loading\";\nimport QuizResult from \"components/gameSleigh/QuizResult\";\nimport { useNavigate } from \"react-router-dom\";\nimport { sleighActions } from \"store/features/sliegh/sleighSlice\";\nimport Intro from \"components/gameSleigh/Intro\";\nimport QuizWord from \"components/gameSleigh/QuizWord\";\n\n//메인에서 클릭 시  -> 게임 단계 화면 -> 단계선택 -> 로딩화면 -> 게임시작 버튼 -> 클릭 시 게임시작 -> 캐릭터 걷기 -> 문제정보가 위에서 떨어짐\n// -> 캐릭터 멈춤 -> 자이로센서 값 받아서 캐릭터 이동 -> 정답 시 동그라미 보여주고 정보? -> 틀릴 시 X 하고 오답정보와 모션\n// -> 다음 문제 진행 -> 반복 -> 문제 3개 완료되면 완료화면 보여주고 별가루 하나 주던가하고 메인으로\n\n// 로딩화면 만들고 로딩 완료되면 시작버튼이 보여지게 해야 함 <- useProgress\n\n// 캔버스에 이미지 그려서 한다고하면... lookat으로 해당방향의 이미지 처다보게하고 걷게함\n// 그리고 기울이는 방향으로 캐릭터가 움직일지.. 아니면 그림이 움직여서 캐릭터로 오게할지..\n// raycaster로 그림에 닿는거를 판단하던지 아니면 포지션위치가 같아지는 거로 정답 판단하면 될듯\n// ㅅㅂ 개어렵네 이미지 네모깍는거만 하루종일햇네 ㅅㅂ\n\n// 캔버스의 이미지를 안쓴다면 이미지가 가운데로 이동하는 거로해서 가운뎅왓을때 정답체크해야할듯\n\n// 만약 캔버스에 안그리는 거면 펭귄이 어디쯤 갓을때 정답인지 판단하기 힘듬..\n// 화면 크기, 비율별로 펭귄이 움직여야하는 거리가 달라짐...\n\n// export const STAGE_DATA = [\n//   [\n//     [\n//       { quiz: \"나비\" },\n//       { word: \"나비\", url: bfyImg, answer: true },\n//       { word: \"강아지\", url: dogIMg, answer: false },\n//     ],\n//     [\n//       { quiz: \"도그\" },\n//       { word: \"도그\", url: dogIMg, answer: true },\n//       { word: \"버터\", url: bfyImg, answer: false },\n//     ],\n//     [\n//       { quiz: \"호랑나비\" },\n//       { word: \"호랑나비\", url: bfyImg, answer: true },\n//       { word: \"웰시코기\", url: dogIMg, answer: false },\n//     ],\n//   ],\n//   [\n//     [\n//       { quiz: \"고고고\" },\n//       { word: \"고고고\", url: bfyImg, answer: true },\n//       { word: \"가가가\", url: dogIMg, answer: false },\n//     ],\n//     [\n//       { quiz: \"123\" },\n//       { word: \"그33\", url: dogIMg, answer: true },\n//       { word: \"버터\", url: bfyImg, answer: false },\n//     ],\n//     [\n//       { quiz: \"2322\" },\n//       { word: \"2322\", url: bfyImg, answer: true },\n//       { word: \"132\", url: dogIMg, answer: false },\n//     ],\n//   ],\n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const STAGE_DATA = [[{\n  quiz: \"나비\"\n}, {\n  word: \"나비\",\n  url: bfyImg,\n  answer: true\n}, {\n  word: \"강아지\",\n  url: dogIMg,\n  answer: false\n}], [{\n  quiz: \"도그\"\n}, {\n  word: \"도그\",\n  url: dogIMg,\n  answer: true\n}, {\n  word: \"버터\",\n  url: bfyImg,\n  answer: false\n}], [{\n  quiz: \"호랑나비\"\n}, {\n  word: \"호랑나비\",\n  url: bfyImg,\n  answer: true\n}, {\n  word: \"웰시코기\",\n  url: dogIMg,\n  answer: false\n}], [{\n  quiz: \"고고고\"\n}, {\n  word: \"고고고\",\n  url: bfyImg,\n  answer: true\n}, {\n  word: \"가가가\",\n  url: dogIMg,\n  answer: false\n}], [{\n  quiz: \"123\"\n}, {\n  word: \"그33\",\n  url: dogIMg,\n  answer: true\n}, {\n  word: \"버터\",\n  url: bfyImg,\n  answer: false\n}], [{\n  quiz: \"2322\"\n}, {\n  word: \"2322\",\n  url: bfyImg,\n  answer: true\n}, {\n  word: \"132\",\n  url: dogIMg,\n  answer: false\n}]];\nconst GameSleigh = () => {\n  _s();\n  // 게임 진행 관련 State\n  const [isLoading, setIsLoading] = useState(true); // 로딩\n  const [isStart, setIsStart] = useState(false); // 게임 시작\n  const [isEnd, setIsEnd] = useState(false); // 게임 종료\n  const [quizStatus, setQuizStatus] = useState(\"idle\"); // 퀴즈 상태 idle(대기) start(퀴즈내려옴) stop(퀴즈맞추기) check(정답확인)\n  const [quizCount, setQuizCount] = useState(0);\n  const [quizResult, setQuizResult] = useState(\"left\"); // left right\n  // const [isMove, setIsMove] = useState(0); // 0 정지 (-) 왼쪽 (+) 오른쪽\n\n  const dispatch = useDispatch();\n  const navigation = useNavigate();\n  const [random, setRandom] = useState([Math.random(), Math.random(), Math.random()]);\n\n  // stage 단계 정보\n  // const stageLevel = useSelector((state) => {\n  //   return state.sleigh.stageLevel;\n  // });\n\n  // 게임 배경 Texture 로딩 및 색상 인코딩\n  const texture = new THREE.TextureLoader().load(forestMap);\n  texture.encoding = THREE.sRGBEncoding;\n\n  // 캐릭터 Ref\n  const modelRef = useRef();\n\n  // 캐릭터 애니메이션\n  const [modelAnimations, setModelAnimations] = useState(null);\n  const doMove = useCallback(value => {\n    const {\n      actions,\n      mixer,\n      names\n    } = modelAnimations;\n\n    // setIsMove(+value);\n    modelRef.current.isMove = value;\n    actions[names[0]].fadeOut(0.2).stop();\n    mixer.timeScale = 1.5;\n    modelRef.current.rotation.y = Math.PI / 2 * value;\n    actions[names[3]].play();\n  }, [modelAnimations]);\n  const stopMove = useCallback(() => {\n    const {\n      actions,\n      mixer,\n      names\n    } = modelAnimations;\n\n    // setIsMove(0);\n    modelRef.current.isMove = 0;\n    actions[names[3]].fadeOut(0.5).stop();\n    modelRef.current.rotation.y = 0;\n    mixer.timeScale = 1;\n    actions[names[0]].play();\n  }, [modelAnimations]);\n  useEffect(() => {\n    if (modelAnimations) modelAnimations.actions[modelAnimations.names[0]].play();\n  }, [modelAnimations]);\n\n  // 게임 시작 시\n  useEffect(() => {\n    if (!modelAnimations || !isStart) return;\n    const {\n      actions,\n      mixer,\n      names\n    } = modelAnimations;\n    actions[names[0]].stop();\n    modelRef.current.rotation.y = Math.PI;\n    actions[names[3]].reset().fadeIn(0.2).play();\n    mixer.timeScale = 1.5;\n    setTimeout(() => {\n      setQuizStatus(\"start\");\n    }, 2000);\n    return () => {\n      names.forEach(element => {\n        actions[element].reset().fadeOut(0.5).stop();\n      });\n    };\n  }, [isStart]);\n  useEffect(() => {\n    if (quizStatus === \"idle\") return;\n    const {\n      actions,\n      mixer,\n      names\n    } = modelAnimations;\n    const stopActions = () => {\n      names.forEach(element => {\n        actions[element].stop();\n      });\n    };\n\n    // 다음 문제\n    if (quizStatus === \"nextQuiz\") {\n      stopActions();\n      if (quizCount < 3) {\n        modelRef.current.rotation.y = Math.PI;\n        mixer.timeScale = 1.5;\n        actions[names[3]].fadeIn(0.2).play();\n        setTimeout(() => {\n          setQuizStatus(\"start\");\n        }, 2000);\n      } else {\n        // 퀴즈 전부 종료\n        actions[names[1]].fadeIn(0.2).play();\n        setTimeout(() => {\n          setQuizStatus(\"idle\");\n          setQuizCount(0);\n          setIsEnd(true);\n        }, 3000);\n      }\n    }\n\n    // 문제 시작\n    if (quizStatus === \"stop\") {\n      stopActions();\n      modelRef.current.rotation.y = 0;\n      mixer.timeScale = 1.5;\n      actions[names[0]].play();\n    }\n\n    // 정답 확인\n    if (quizStatus === \"check\") {\n      stopActions();\n      stopMove();\n      modelRef.current.position.x = 0;\n      actions[names[0]].play();\n    }\n\n    // return () => {};\n  }, [quizStatus]);\n  useEffect(() => {\n    if (isEnd) navigation(\"/ending\");\n  }, [isEnd]);\n  const addMoveEvent = () => {\n    window.doMove = value => {\n      doMove(value);\n    };\n    window.stopMove = stopMove;\n  };\n  const removeMoveEvent = () => {\n    window.doMove = () => null;\n    window.stopMove = () => null;\n  };\n\n  // 게임 입장 시 중력센서용 함수 윈도우에 추가\n  useEffect(() => {\n    if (window.sleigh) {\n      window.sleigh.addGravitySensor();\n    }\n    return () => {\n      if (window.sleigh) {\n        window.sleigh.removeGravitySensor();\n      }\n    };\n  }, []);\n\n  // 게임 진행상황에 맞게 센서 사용 온오프\n  useEffect(() => {\n    if (quizStatus === \"stop\" && quizCount < 3) {\n      addMoveEvent();\n    }\n    return () => {\n      removeMoveEvent();\n    };\n  }, [quizStatus]);\n\n  // 카메라 설정\n  const camera = {\n    fov: 80,\n    aspect: window.innerWidth / window.innerHeight / 2,\n    position: [0, 0, 3]\n  };\n  const quizScale = window.innerWidth / window.innerHeight * 1.25;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen w-screen\",\n      children: [/*#__PURE__*/_jsxDEV(Canvas, {\n        flat: true,\n        children: [/*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: null,\n          children: [/*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n            ...camera,\n            makeDefault: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Environment, {\n            background: true,\n            map: texture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Model, {\n            modelRef: modelRef,\n            quizScale: quizScale,\n            quizStatus: quizStatus,\n            setQuizResult: setQuizResult,\n            setQuizStatus: setQuizStatus,\n            setModelAnimations: setModelAnimations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), quizStatus !== \"idle\" && quizStatus !== \"nextQuiz\" && quizCount < 3 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(QuizCard, {\n              side: \"left\",\n              setQuizStatus: setQuizStatus,\n              quizScale: quizScale,\n              quizData: random[quizCount] > 0.5 ? STAGE_DATA[quizCount][1] : STAGE_DATA[quizCount][2]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(QuizCard, {\n              side: \"right\",\n              quizScale: quizScale,\n              quizData: random[quizCount] > 0.5 ? STAGE_DATA[quizCount][2] : STAGE_DATA[quizCount][1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingProgress, {\n          setIsLoading: setIsLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), !isLoading && !isStart && /*#__PURE__*/_jsxDEV(Intro, {\n        setIsStart: setIsStart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 36\n      }, this), quizStatus === \"stop\" && quizCount < 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bottom-[5vh] w-screen flex justify-between px-[10vw]\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onTouchStart: e => {\n            e.preventDefault();\n            removeMoveEvent();\n            doMove(-1);\n          },\n          onMouseDown: () => {\n            doMove(-1);\n          },\n          onTouchEnd: e => {\n            e.preventDefault();\n            addMoveEvent();\n            stopMove();\n          },\n          onMouseUp: stopMove,\n          style: {\n            WebkitUserSelect: \"none\",\n            MozUserSelect: \"none\",\n            msUserSelect: \"none\",\n            userSelect: \"none\"\n          },\n          className: \"bg-mainBlack opacity-80 rounded-[100%] text-[4vw] text-white w-[8vw] h-[8vw] z-20\",\n          children: \"⬅\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onTouchStart: e => {\n            e.preventDefault();\n            removeMoveEvent();\n            doMove(1);\n          },\n          onMouseDown: () => {\n            doMove(1);\n          },\n          onTouchEnd: e => {\n            e.preventDefault();\n            addMoveEvent();\n            stopMove();\n          },\n          onMouseUp: stopMove,\n          style: {\n            WebkitUserSelect: \"none\",\n            MozUserSelect: \"none\",\n            msUserSelect: \"none\",\n            userSelect: \"none\"\n          },\n          className: \"bg-mainBlack opacity-80 rounded-[100%] text-[4vw] text-white w-[8vw] h-[8vw] z-20\",\n          children: \"➡\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this), quizStatus === \"stop\" && quizCount < 3 && /*#__PURE__*/_jsxDEV(QuizWord, {\n        word: STAGE_DATA[quizCount][0].quiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(SleighLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 23\n      }, this), quizStatus === \"check\" && /*#__PURE__*/_jsxDEV(QuizResult, {\n        setQuizStatus: setQuizStatus,\n        setQuizCount: setQuizCount,\n        result: quizResult === \"left\" ? STAGE_DATA[quizCount][random[quizCount] > 0.5 ? 1 : 2] : STAGE_DATA[quizCount][random[quizCount] > 0.5 ? 2 : 1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(GameSleigh, \"KhmoHNeEYOOe5zpaO62Hzv4i6ko=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = GameSleigh;\nexport default GameSleigh;\nvar _c;\n$RefreshReg$(_c, \"GameSleigh\");","map":{"version":3,"names":["Environment","Html","Image","Loader","OrbitControls","PerspectiveCamera","useProgress","Canvas","useFrame","useLoader","Model","React","Suspense","useCallback","useEffect","useRef","useState","useDispatch","useSelector","THREE","forestMap","QuizCard","bfyImg","dogIMg","SleighLoading","LoadingProgress","QuizResult","useNavigate","sleighActions","Intro","QuizWord","jsxDEV","_jsxDEV","Fragment","_Fragment","STAGE_DATA","quiz","word","url","answer","GameSleigh","_s","isLoading","setIsLoading","isStart","setIsStart","isEnd","setIsEnd","quizStatus","setQuizStatus","quizCount","setQuizCount","quizResult","setQuizResult","dispatch","navigation","random","setRandom","Math","texture","TextureLoader","load","encoding","sRGBEncoding","modelRef","modelAnimations","setModelAnimations","doMove","value","actions","mixer","names","current","isMove","fadeOut","stop","timeScale","rotation","y","PI","play","stopMove","reset","fadeIn","setTimeout","forEach","element","stopActions","position","x","addMoveEvent","window","removeMoveEvent","sleigh","addGravitySensor","removeGravitySensor","camera","fov","aspect","innerWidth","innerHeight","quizScale","children","className","flat","fallback","makeDefault","fileName","_jsxFileName","lineNumber","columnNumber","background","map","side","quizData","type","onTouchStart","e","preventDefault","onMouseDown","onTouchEnd","onMouseUp","style","WebkitUserSelect","MozUserSelect","msUserSelect","userSelect","result","_c","$RefreshReg$"],"sources":["C:/Users/SSAFY/Documents/S08P31B206/front/src/pages/GameSleigh.jsx"],"sourcesContent":["import {\r\n  Environment,\r\n  Html,\r\n  Image,\r\n  Loader,\r\n  OrbitControls,\r\n  PerspectiveCamera,\r\n  useProgress,\r\n} from \"@react-three/drei\";\r\nimport { Canvas, useFrame, useLoader } from \"@react-three/fiber\";\r\nimport Model from \"components/gameSleigh/Model\";\r\nimport React, {\r\n  Suspense,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as THREE from \"three\";\r\nimport forestMap from \"assets/images/background_forest.png\";\r\nimport QuizCard from \"components/gameSleigh/QuizCard\";\r\nimport bfyImg from \"assets/images/bfy.png\";\r\nimport dogIMg from \"assets/images/dog.png\";\r\nimport { SleighLoading, LoadingProgress } from \"components/gameSleigh/Loading\";\r\nimport QuizResult from \"components/gameSleigh/QuizResult\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { sleighActions } from \"store/features/sliegh/sleighSlice\";\r\nimport Intro from \"components/gameSleigh/Intro\";\r\nimport QuizWord from \"components/gameSleigh/QuizWord\";\r\n\r\n//메인에서 클릭 시  -> 게임 단계 화면 -> 단계선택 -> 로딩화면 -> 게임시작 버튼 -> 클릭 시 게임시작 -> 캐릭터 걷기 -> 문제정보가 위에서 떨어짐\r\n// -> 캐릭터 멈춤 -> 자이로센서 값 받아서 캐릭터 이동 -> 정답 시 동그라미 보여주고 정보? -> 틀릴 시 X 하고 오답정보와 모션\r\n// -> 다음 문제 진행 -> 반복 -> 문제 3개 완료되면 완료화면 보여주고 별가루 하나 주던가하고 메인으로\r\n\r\n// 로딩화면 만들고 로딩 완료되면 시작버튼이 보여지게 해야 함 <- useProgress\r\n\r\n// 캔버스에 이미지 그려서 한다고하면... lookat으로 해당방향의 이미지 처다보게하고 걷게함\r\n// 그리고 기울이는 방향으로 캐릭터가 움직일지.. 아니면 그림이 움직여서 캐릭터로 오게할지..\r\n// raycaster로 그림에 닿는거를 판단하던지 아니면 포지션위치가 같아지는 거로 정답 판단하면 될듯\r\n// ㅅㅂ 개어렵네 이미지 네모깍는거만 하루종일햇네 ㅅㅂ\r\n\r\n// 캔버스의 이미지를 안쓴다면 이미지가 가운데로 이동하는 거로해서 가운뎅왓을때 정답체크해야할듯\r\n\r\n// 만약 캔버스에 안그리는 거면 펭귄이 어디쯤 갓을때 정답인지 판단하기 힘듬..\r\n// 화면 크기, 비율별로 펭귄이 움직여야하는 거리가 달라짐...\r\n\r\n// export const STAGE_DATA = [\r\n//   [\r\n//     [\r\n//       { quiz: \"나비\" },\r\n//       { word: \"나비\", url: bfyImg, answer: true },\r\n//       { word: \"강아지\", url: dogIMg, answer: false },\r\n//     ],\r\n//     [\r\n//       { quiz: \"도그\" },\r\n//       { word: \"도그\", url: dogIMg, answer: true },\r\n//       { word: \"버터\", url: bfyImg, answer: false },\r\n//     ],\r\n//     [\r\n//       { quiz: \"호랑나비\" },\r\n//       { word: \"호랑나비\", url: bfyImg, answer: true },\r\n//       { word: \"웰시코기\", url: dogIMg, answer: false },\r\n//     ],\r\n//   ],\r\n//   [\r\n//     [\r\n//       { quiz: \"고고고\" },\r\n//       { word: \"고고고\", url: bfyImg, answer: true },\r\n//       { word: \"가가가\", url: dogIMg, answer: false },\r\n//     ],\r\n//     [\r\n//       { quiz: \"123\" },\r\n//       { word: \"그33\", url: dogIMg, answer: true },\r\n//       { word: \"버터\", url: bfyImg, answer: false },\r\n//     ],\r\n//     [\r\n//       { quiz: \"2322\" },\r\n//       { word: \"2322\", url: bfyImg, answer: true },\r\n//       { word: \"132\", url: dogIMg, answer: false },\r\n//     ],\r\n//   ],\r\n// ];\r\nexport const STAGE_DATA = [\r\n  [\r\n    { quiz: \"나비\" },\r\n    { word: \"나비\", url: bfyImg, answer: true },\r\n    { word: \"강아지\", url: dogIMg, answer: false },\r\n  ],\r\n  [\r\n    { quiz: \"도그\" },\r\n    { word: \"도그\", url: dogIMg, answer: true },\r\n    { word: \"버터\", url: bfyImg, answer: false },\r\n  ],\r\n  [\r\n    { quiz: \"호랑나비\" },\r\n    { word: \"호랑나비\", url: bfyImg, answer: true },\r\n    { word: \"웰시코기\", url: dogIMg, answer: false },\r\n  ],\r\n  [\r\n    { quiz: \"고고고\" },\r\n    { word: \"고고고\", url: bfyImg, answer: true },\r\n    { word: \"가가가\", url: dogIMg, answer: false },\r\n  ],\r\n  [\r\n    { quiz: \"123\" },\r\n    { word: \"그33\", url: dogIMg, answer: true },\r\n    { word: \"버터\", url: bfyImg, answer: false },\r\n  ],\r\n  [\r\n    { quiz: \"2322\" },\r\n    { word: \"2322\", url: bfyImg, answer: true },\r\n    { word: \"132\", url: dogIMg, answer: false },\r\n  ],\r\n];\r\n\r\nconst GameSleigh = () => {\r\n  // 게임 진행 관련 State\r\n  const [isLoading, setIsLoading] = useState(true); // 로딩\r\n  const [isStart, setIsStart] = useState(false); // 게임 시작\r\n  const [isEnd, setIsEnd] = useState(false); // 게임 종료\r\n  const [quizStatus, setQuizStatus] = useState(\"idle\"); // 퀴즈 상태 idle(대기) start(퀴즈내려옴) stop(퀴즈맞추기) check(정답확인)\r\n  const [quizCount, setQuizCount] = useState(0);\r\n  const [quizResult, setQuizResult] = useState(\"left\"); // left right\r\n  // const [isMove, setIsMove] = useState(0); // 0 정지 (-) 왼쪽 (+) 오른쪽\r\n\r\n  const dispatch = useDispatch();\r\n  const navigation = useNavigate();\r\n\r\n  const [random, setRandom] = useState([\r\n    Math.random(),\r\n    Math.random(),\r\n    Math.random(),\r\n  ]);\r\n\r\n  // stage 단계 정보\r\n  // const stageLevel = useSelector((state) => {\r\n  //   return state.sleigh.stageLevel;\r\n  // });\r\n\r\n  // 게임 배경 Texture 로딩 및 색상 인코딩\r\n  const texture = new THREE.TextureLoader().load(forestMap);\r\n  texture.encoding = THREE.sRGBEncoding;\r\n\r\n  // 캐릭터 Ref\r\n  const modelRef = useRef();\r\n\r\n  // 캐릭터 애니메이션\r\n  const [modelAnimations, setModelAnimations] = useState(null);\r\n\r\n  const doMove = useCallback(\r\n    (value) => {\r\n      const { actions, mixer, names } = modelAnimations;\r\n\r\n      // setIsMove(+value);\r\n      modelRef.current.isMove = value;\r\n      actions[names[0]].fadeOut(0.2).stop();\r\n      mixer.timeScale = 1.5;\r\n      modelRef.current.rotation.y = (Math.PI / 2) * value;\r\n      actions[names[3]].play();\r\n    },\r\n    [modelAnimations]\r\n  );\r\n\r\n  const stopMove = useCallback(() => {\r\n    const { actions, mixer, names } = modelAnimations;\r\n\r\n    // setIsMove(0);\r\n    modelRef.current.isMove = 0;\r\n    actions[names[3]].fadeOut(0.5).stop();\r\n    modelRef.current.rotation.y = 0;\r\n    mixer.timeScale = 1;\r\n    actions[names[0]].play();\r\n  }, [modelAnimations]);\r\n\r\n  useEffect(() => {\r\n    if (modelAnimations)\r\n      modelAnimations.actions[modelAnimations.names[0]].play();\r\n  }, [modelAnimations]);\r\n\r\n  // 게임 시작 시\r\n  useEffect(() => {\r\n    if (!modelAnimations || !isStart) return;\r\n\r\n    const { actions, mixer, names } = modelAnimations;\r\n\r\n    actions[names[0]].stop();\r\n    modelRef.current.rotation.y = Math.PI;\r\n    actions[names[3]].reset().fadeIn(0.2).play();\r\n    mixer.timeScale = 1.5;\r\n    setTimeout(() => {\r\n      setQuizStatus(\"start\");\r\n    }, 2000);\r\n\r\n    return () => {\r\n      names.forEach((element) => {\r\n        actions[element].reset().fadeOut(0.5).stop();\r\n      });\r\n    };\r\n  }, [isStart]);\r\n\r\n  useEffect(() => {\r\n    if (quizStatus === \"idle\") return;\r\n\r\n    const { actions, mixer, names } = modelAnimations;\r\n\r\n    const stopActions = () => {\r\n      names.forEach((element) => {\r\n        actions[element].stop();\r\n      });\r\n    };\r\n\r\n    // 다음 문제\r\n    if (quizStatus === \"nextQuiz\") {\r\n      stopActions();\r\n      if (quizCount < 3) {\r\n        modelRef.current.rotation.y = Math.PI;\r\n        mixer.timeScale = 1.5;\r\n        actions[names[3]].fadeIn(0.2).play();\r\n\r\n        setTimeout(() => {\r\n          setQuizStatus(\"start\");\r\n        }, 2000);\r\n      } else {\r\n        // 퀴즈 전부 종료\r\n        actions[names[1]].fadeIn(0.2).play();\r\n\r\n        setTimeout(() => {\r\n          setQuizStatus(\"idle\");\r\n          setQuizCount(0);\r\n          setIsEnd(true);\r\n        }, 3000);\r\n      }\r\n    }\r\n\r\n    // 문제 시작\r\n    if (quizStatus === \"stop\") {\r\n      stopActions();\r\n      modelRef.current.rotation.y = 0;\r\n      mixer.timeScale = 1.5;\r\n      actions[names[0]].play();\r\n    }\r\n\r\n    // 정답 확인\r\n    if (quizStatus === \"check\") {\r\n      stopActions();\r\n      stopMove();\r\n      modelRef.current.position.x = 0;\r\n      actions[names[0]].play();\r\n    }\r\n\r\n    // return () => {};\r\n  }, [quizStatus]);\r\n\r\n  useEffect(() => {\r\n    if (isEnd) navigation(\"/ending\");\r\n  }, [isEnd]);\r\n\r\n  const addMoveEvent = () => {\r\n    window.doMove = (value) => {\r\n      doMove(value);\r\n    };\r\n    window.stopMove = stopMove;\r\n  };\r\n\r\n  const removeMoveEvent = () => {\r\n    window.doMove = () => null;\r\n    window.stopMove = () => null;\r\n  };\r\n\r\n  // 게임 입장 시 중력센서용 함수 윈도우에 추가\r\n  useEffect(() => {\r\n    if (window.sleigh) {\r\n      window.sleigh.addGravitySensor();\r\n    }\r\n\r\n    return () => {\r\n      if (window.sleigh) {\r\n        window.sleigh.removeGravitySensor();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // 게임 진행상황에 맞게 센서 사용 온오프\r\n  useEffect(() => {\r\n    if (quizStatus === \"stop\" && quizCount < 3) {\r\n      addMoveEvent();\r\n    }\r\n\r\n    return () => {\r\n      removeMoveEvent();\r\n    };\r\n  }, [quizStatus]);\r\n\r\n  // 카메라 설정\r\n  const camera = {\r\n    fov: 80,\r\n    aspect: window.innerWidth / window.innerHeight / 2,\r\n    position: [0, 0, 3],\r\n  };\r\n\r\n  const quizScale = (window.innerWidth / window.innerHeight) * 1.25;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"h-screen w-screen\">\r\n        <Canvas flat={true}>\r\n          <Suspense fallback={null}>\r\n            <PerspectiveCamera {...camera} makeDefault />\r\n            <ambientLight />\r\n            <Environment background={true} map={texture} />\r\n            <Model\r\n              modelRef={modelRef}\r\n              quizScale={quizScale}\r\n              quizStatus={quizStatus}\r\n              setQuizResult={setQuizResult}\r\n              setQuizStatus={setQuizStatus}\r\n              setModelAnimations={setModelAnimations}\r\n            />\r\n            {quizStatus !== \"idle\" &&\r\n              quizStatus !== \"nextQuiz\" &&\r\n              quizCount < 3 && (\r\n                <>\r\n                  <QuizCard\r\n                    side=\"left\"\r\n                    setQuizStatus={setQuizStatus}\r\n                    quizScale={quizScale}\r\n                    quizData={\r\n                      random[quizCount] > 0.5\r\n                        ? STAGE_DATA[quizCount][1]\r\n                        : STAGE_DATA[quizCount][2]\r\n                    }\r\n                  />\r\n                  <QuizCard\r\n                    side=\"right\"\r\n                    quizScale={quizScale}\r\n                    quizData={\r\n                      random[quizCount] > 0.5\r\n                        ? STAGE_DATA[quizCount][2]\r\n                        : STAGE_DATA[quizCount][1]\r\n                    }\r\n                  />\r\n                </>\r\n              )}\r\n          </Suspense>\r\n          {isLoading && <LoadingProgress setIsLoading={setIsLoading} />}\r\n        </Canvas>\r\n\r\n        {!isLoading && !isStart && <Intro setIsStart={setIsStart} />}\r\n        {quizStatus === \"stop\" && quizCount < 3 && (\r\n          <div className=\"absolute bottom-[5vh] w-screen flex justify-between px-[10vw]\">\r\n            <button\r\n              type=\"button\"\r\n              onTouchStart={(e) => {\r\n                e.preventDefault();\r\n                removeMoveEvent();\r\n                doMove(-1);\r\n              }}\r\n              onMouseDown={() => {\r\n                doMove(-1);\r\n              }}\r\n              onTouchEnd={(e) => {\r\n                e.preventDefault();\r\n                addMoveEvent();\r\n                stopMove();\r\n              }}\r\n              onMouseUp={stopMove}\r\n              style={{\r\n                WebkitUserSelect: \"none\",\r\n                MozUserSelect: \"none\",\r\n                msUserSelect: \"none\",\r\n                userSelect: \"none\",\r\n              }}\r\n              className=\"bg-mainBlack opacity-80 rounded-[100%] text-[4vw] text-white w-[8vw] h-[8vw] z-20\"\r\n            >\r\n              {\"⬅\"}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onTouchStart={(e) => {\r\n                e.preventDefault();\r\n                removeMoveEvent();\r\n                doMove(1);\r\n              }}\r\n              onMouseDown={() => {\r\n                doMove(1);\r\n              }}\r\n              onTouchEnd={(e) => {\r\n                e.preventDefault();\r\n                addMoveEvent();\r\n                stopMove();\r\n              }}\r\n              onMouseUp={stopMove}\r\n              style={{\r\n                WebkitUserSelect: \"none\",\r\n                MozUserSelect: \"none\",\r\n                msUserSelect: \"none\",\r\n                userSelect: \"none\",\r\n              }}\r\n              className=\"bg-mainBlack opacity-80 rounded-[100%] text-[4vw] text-white w-[8vw] h-[8vw] z-20\"\r\n            >\r\n              {\"➡\"}\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {quizStatus === \"stop\" && quizCount < 3 && (\r\n          <QuizWord word={STAGE_DATA[quizCount][0].quiz} />\r\n        )}\r\n\r\n        {isLoading && <SleighLoading />}\r\n        {quizStatus === \"check\" && (\r\n          <QuizResult\r\n            setQuizStatus={setQuizStatus}\r\n            setQuizCount={setQuizCount}\r\n            result={\r\n              quizResult === \"left\"\r\n                ? STAGE_DATA[quizCount][random[quizCount] > 0.5 ? 1 : 2]\r\n                : STAGE_DATA[quizCount][random[quizCount] > 0.5 ? 2 : 1]\r\n            }\r\n          />\r\n        )}\r\n        {/* {isEnd && (\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                // dispatch(sleighActions.setStage(stageLevel + 1));\r\n                setIsEnd(false);\r\n                setIsStart(false);\r\n                setIsLoading(true);\r\n              }}\r\n            >\r\n              다음 단계로\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                setIsEnd(false);\r\n                setIsStart(false);\r\n                setIsLoading(true);\r\n              }}\r\n            >\r\n              다시하기\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                navigation(\"/\");\r\n              }}\r\n            >\r\n              메인으로\r\n            </button>\r\n          </div>\r\n        )} */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameSleigh;\r\n"],"mappings":";;AAAA,SACEA,WAAW,EACXC,IAAI,EACJC,KAAK,EACLC,MAAM,EACNC,aAAa,EACbC,iBAAiB,EACjBC,WAAW,QACN,mBAAmB;AAC1B,SAASC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,oBAAoB;AAChE,OAAOC,KAAK,MAAM,6BAA6B;AAC/C,OAAOC,KAAK,IACVC,QAAQ,EACRC,WAAW,EACXC,SAAS,EACTC,MAAM,EACNC,QAAQ,QACH,OAAO;AACd,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,qCAAqC;AAC3D,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,aAAa,EAAEC,eAAe,QAAQ,+BAA+B;AAC9E,OAAOC,UAAU,MAAM,kCAAkC;AACzD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,QAAQ,mCAAmC;AACjE,OAAOC,KAAK,MAAM,6BAA6B;AAC/C,OAAOC,QAAQ,MAAM,gCAAgC;;AAErD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,OAAO,MAAMC,UAAU,GAAG,CACxB,CACE;EAAEC,IAAI,EAAE;AAAK,CAAC,EACd;EAAEC,IAAI,EAAE,IAAI;EAAEC,GAAG,EAAEhB,MAAM;EAAEiB,MAAM,EAAE;AAAK,CAAC,EACzC;EAAEF,IAAI,EAAE,KAAK;EAAEC,GAAG,EAAEf,MAAM;EAAEgB,MAAM,EAAE;AAAM,CAAC,CAC5C,EACD,CACE;EAAEH,IAAI,EAAE;AAAK,CAAC,EACd;EAAEC,IAAI,EAAE,IAAI;EAAEC,GAAG,EAAEf,MAAM;EAAEgB,MAAM,EAAE;AAAK,CAAC,EACzC;EAAEF,IAAI,EAAE,IAAI;EAAEC,GAAG,EAAEhB,MAAM;EAAEiB,MAAM,EAAE;AAAM,CAAC,CAC3C,EACD,CACE;EAAEH,IAAI,EAAE;AAAO,CAAC,EAChB;EAAEC,IAAI,EAAE,MAAM;EAAEC,GAAG,EAAEhB,MAAM;EAAEiB,MAAM,EAAE;AAAK,CAAC,EAC3C;EAAEF,IAAI,EAAE,MAAM;EAAEC,GAAG,EAAEf,MAAM;EAAEgB,MAAM,EAAE;AAAM,CAAC,CAC7C,EACD,CACE;EAAEH,IAAI,EAAE;AAAM,CAAC,EACf;EAAEC,IAAI,EAAE,KAAK;EAAEC,GAAG,EAAEhB,MAAM;EAAEiB,MAAM,EAAE;AAAK,CAAC,EAC1C;EAAEF,IAAI,EAAE,KAAK;EAAEC,GAAG,EAAEf,MAAM;EAAEgB,MAAM,EAAE;AAAM,CAAC,CAC5C,EACD,CACE;EAAEH,IAAI,EAAE;AAAM,CAAC,EACf;EAAEC,IAAI,EAAE,KAAK;EAAEC,GAAG,EAAEf,MAAM;EAAEgB,MAAM,EAAE;AAAK,CAAC,EAC1C;EAAEF,IAAI,EAAE,IAAI;EAAEC,GAAG,EAAEhB,MAAM;EAAEiB,MAAM,EAAE;AAAM,CAAC,CAC3C,EACD,CACE;EAAEH,IAAI,EAAE;AAAO,CAAC,EAChB;EAAEC,IAAI,EAAE,MAAM;EAAEC,GAAG,EAAEhB,MAAM;EAAEiB,MAAM,EAAE;AAAK,CAAC,EAC3C;EAAEF,IAAI,EAAE,KAAK;EAAEC,GAAG,EAAEf,MAAM;EAAEgB,MAAM,EAAE;AAAM,CAAC,CAC5C,CACF;AAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClD,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC8B,KAAK,EAAEC,QAAQ,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACgC,UAAU,EAAEC,aAAa,CAAC,GAAGjC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;EACtD,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACoC,UAAU,EAAEC,aAAa,CAAC,GAAGrC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;EACtD;;EAEA,MAAMsC,QAAQ,GAAGrC,WAAW,EAAE;EAC9B,MAAMsC,UAAU,GAAG5B,WAAW,EAAE;EAEhC,MAAM,CAAC6B,MAAM,EAAEC,SAAS,CAAC,GAAGzC,QAAQ,CAAC,CACnC0C,IAAI,CAACF,MAAM,EAAE,EACbE,IAAI,CAACF,MAAM,EAAE,EACbE,IAAI,CAACF,MAAM,EAAE,CACd,CAAC;;EAEF;EACA;EACA;EACA;;EAEA;EACA,MAAMG,OAAO,GAAG,IAAIxC,KAAK,CAACyC,aAAa,EAAE,CAACC,IAAI,CAACzC,SAAS,CAAC;EACzDuC,OAAO,CAACG,QAAQ,GAAG3C,KAAK,CAAC4C,YAAY;;EAErC;EACA,MAAMC,QAAQ,GAAGjD,MAAM,EAAE;;EAEzB;EACA,MAAM,CAACkD,eAAe,EAAEC,kBAAkB,CAAC,GAAGlD,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMmD,MAAM,GAAGtD,WAAW,CACvBuD,KAAK,IAAK;IACT,MAAM;MAAEC,OAAO;MAAEC,KAAK;MAAEC;IAAM,CAAC,GAAGN,eAAe;;IAEjD;IACAD,QAAQ,CAACQ,OAAO,CAACC,MAAM,GAAGL,KAAK;IAC/BC,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAACG,OAAO,CAAC,GAAG,CAAC,CAACC,IAAI,EAAE;IACrCL,KAAK,CAACM,SAAS,GAAG,GAAG;IACrBZ,QAAQ,CAACQ,OAAO,CAACK,QAAQ,CAACC,CAAC,GAAIpB,IAAI,CAACqB,EAAE,GAAG,CAAC,GAAIX,KAAK;IACnDC,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAACS,IAAI,EAAE;EAC1B,CAAC,EACD,CAACf,eAAe,CAAC,CAClB;EAED,MAAMgB,QAAQ,GAAGpE,WAAW,CAAC,MAAM;IACjC,MAAM;MAAEwD,OAAO;MAAEC,KAAK;MAAEC;IAAM,CAAC,GAAGN,eAAe;;IAEjD;IACAD,QAAQ,CAACQ,OAAO,CAACC,MAAM,GAAG,CAAC;IAC3BJ,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAACG,OAAO,CAAC,GAAG,CAAC,CAACC,IAAI,EAAE;IACrCX,QAAQ,CAACQ,OAAO,CAACK,QAAQ,CAACC,CAAC,GAAG,CAAC;IAC/BR,KAAK,CAACM,SAAS,GAAG,CAAC;IACnBP,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAACS,IAAI,EAAE;EAC1B,CAAC,EAAE,CAACf,eAAe,CAAC,CAAC;EAErBnD,SAAS,CAAC,MAAM;IACd,IAAImD,eAAe,EACjBA,eAAe,CAACI,OAAO,CAACJ,eAAe,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC,CAACS,IAAI,EAAE;EAC5D,CAAC,EAAE,CAACf,eAAe,CAAC,CAAC;;EAErB;EACAnD,SAAS,CAAC,MAAM;IACd,IAAI,CAACmD,eAAe,IAAI,CAACrB,OAAO,EAAE;IAElC,MAAM;MAAEyB,OAAO;MAAEC,KAAK;MAAEC;IAAM,CAAC,GAAGN,eAAe;IAEjDI,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAACI,IAAI,EAAE;IACxBX,QAAQ,CAACQ,OAAO,CAACK,QAAQ,CAACC,CAAC,GAAGpB,IAAI,CAACqB,EAAE;IACrCV,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAACW,KAAK,EAAE,CAACC,MAAM,CAAC,GAAG,CAAC,CAACH,IAAI,EAAE;IAC5CV,KAAK,CAACM,SAAS,GAAG,GAAG;IACrBQ,UAAU,CAAC,MAAM;MACfnC,aAAa,CAAC,OAAO,CAAC;IACxB,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACXsB,KAAK,CAACc,OAAO,CAAEC,OAAO,IAAK;QACzBjB,OAAO,CAACiB,OAAO,CAAC,CAACJ,KAAK,EAAE,CAACR,OAAO,CAAC,GAAG,CAAC,CAACC,IAAI,EAAE;MAC9C,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,CAAC/B,OAAO,CAAC,CAAC;EAEb9B,SAAS,CAAC,MAAM;IACd,IAAIkC,UAAU,KAAK,MAAM,EAAE;IAE3B,MAAM;MAAEqB,OAAO;MAAEC,KAAK;MAAEC;IAAM,CAAC,GAAGN,eAAe;IAEjD,MAAMsB,WAAW,GAAGA,CAAA,KAAM;MACxBhB,KAAK,CAACc,OAAO,CAAEC,OAAO,IAAK;QACzBjB,OAAO,CAACiB,OAAO,CAAC,CAACX,IAAI,EAAE;MACzB,CAAC,CAAC;IACJ,CAAC;;IAED;IACA,IAAI3B,UAAU,KAAK,UAAU,EAAE;MAC7BuC,WAAW,EAAE;MACb,IAAIrC,SAAS,GAAG,CAAC,EAAE;QACjBc,QAAQ,CAACQ,OAAO,CAACK,QAAQ,CAACC,CAAC,GAAGpB,IAAI,CAACqB,EAAE;QACrCT,KAAK,CAACM,SAAS,GAAG,GAAG;QACrBP,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAACY,MAAM,CAAC,GAAG,CAAC,CAACH,IAAI,EAAE;QAEpCI,UAAU,CAAC,MAAM;UACfnC,aAAa,CAAC,OAAO,CAAC;QACxB,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,MAAM;QACL;QACAoB,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAACY,MAAM,CAAC,GAAG,CAAC,CAACH,IAAI,EAAE;QAEpCI,UAAU,CAAC,MAAM;UACfnC,aAAa,CAAC,MAAM,CAAC;UACrBE,YAAY,CAAC,CAAC,CAAC;UACfJ,QAAQ,CAAC,IAAI,CAAC;QAChB,CAAC,EAAE,IAAI,CAAC;MACV;IACF;;IAEA;IACA,IAAIC,UAAU,KAAK,MAAM,EAAE;MACzBuC,WAAW,EAAE;MACbvB,QAAQ,CAACQ,OAAO,CAACK,QAAQ,CAACC,CAAC,GAAG,CAAC;MAC/BR,KAAK,CAACM,SAAS,GAAG,GAAG;MACrBP,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAACS,IAAI,EAAE;IAC1B;;IAEA;IACA,IAAIhC,UAAU,KAAK,OAAO,EAAE;MAC1BuC,WAAW,EAAE;MACbN,QAAQ,EAAE;MACVjB,QAAQ,CAACQ,OAAO,CAACgB,QAAQ,CAACC,CAAC,GAAG,CAAC;MAC/BpB,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAACS,IAAI,EAAE;IAC1B;;IAEA;EACF,CAAC,EAAE,CAAChC,UAAU,CAAC,CAAC;EAEhBlC,SAAS,CAAC,MAAM;IACd,IAAIgC,KAAK,EAAES,UAAU,CAAC,SAAS,CAAC;EAClC,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAEX,MAAM4C,YAAY,GAAGA,CAAA,KAAM;IACzBC,MAAM,CAACxB,MAAM,GAAIC,KAAK,IAAK;MACzBD,MAAM,CAACC,KAAK,CAAC;IACf,CAAC;IACDuB,MAAM,CAACV,QAAQ,GAAGA,QAAQ;EAC5B,CAAC;EAED,MAAMW,eAAe,GAAGA,CAAA,KAAM;IAC5BD,MAAM,CAACxB,MAAM,GAAG,MAAM,IAAI;IAC1BwB,MAAM,CAACV,QAAQ,GAAG,MAAM,IAAI;EAC9B,CAAC;;EAED;EACAnE,SAAS,CAAC,MAAM;IACd,IAAI6E,MAAM,CAACE,MAAM,EAAE;MACjBF,MAAM,CAACE,MAAM,CAACC,gBAAgB,EAAE;IAClC;IAEA,OAAO,MAAM;MACX,IAAIH,MAAM,CAACE,MAAM,EAAE;QACjBF,MAAM,CAACE,MAAM,CAACE,mBAAmB,EAAE;MACrC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAjF,SAAS,CAAC,MAAM;IACd,IAAIkC,UAAU,KAAK,MAAM,IAAIE,SAAS,GAAG,CAAC,EAAE;MAC1CwC,YAAY,EAAE;IAChB;IAEA,OAAO,MAAM;MACXE,eAAe,EAAE;IACnB,CAAC;EACH,CAAC,EAAE,CAAC5C,UAAU,CAAC,CAAC;;EAEhB;EACA,MAAMgD,MAAM,GAAG;IACbC,GAAG,EAAE,EAAE;IACPC,MAAM,EAAEP,MAAM,CAACQ,UAAU,GAAGR,MAAM,CAACS,WAAW,GAAG,CAAC;IAClDZ,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAMa,SAAS,GAAIV,MAAM,CAACQ,UAAU,GAAGR,MAAM,CAACS,WAAW,GAAI,IAAI;EAEjE,oBACEpE,OAAA,CAAAE,SAAA;IAAAoE,QAAA,eACEtE,OAAA;MAAKuE,SAAS,EAAC,mBAAmB;MAAAD,QAAA,gBAChCtE,OAAA,CAACzB,MAAM;QAACiG,IAAI,EAAE,IAAK;QAAAF,QAAA,gBACjBtE,OAAA,CAACpB,QAAQ;UAAC6F,QAAQ,EAAE,IAAK;UAAAH,QAAA,gBACvBtE,OAAA,CAAC3B,iBAAiB;YAAA,GAAK2F,MAAM;YAAEU,WAAW;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,eAC7C9E,OAAA;YAAA2E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAgB,eAChB9E,OAAA,CAAChC,WAAW;YAAC+G,UAAU,EAAE,IAAK;YAACC,GAAG,EAAErD;UAAQ;YAAAgD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,eAC/C9E,OAAA,CAACtB,KAAK;YACJsD,QAAQ,EAAEA,QAAS;YACnBqC,SAAS,EAAEA,SAAU;YACrBrD,UAAU,EAAEA,UAAW;YACvBK,aAAa,EAAEA,aAAc;YAC7BJ,aAAa,EAAEA,aAAc;YAC7BiB,kBAAkB,EAAEA;UAAmB;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACvC,EACD9D,UAAU,KAAK,MAAM,IACpBA,UAAU,KAAK,UAAU,IACzBE,SAAS,GAAG,CAAC,iBACXlB,OAAA,CAAAE,SAAA;YAAAoE,QAAA,gBACEtE,OAAA,CAACX,QAAQ;cACP4F,IAAI,EAAC,MAAM;cACXhE,aAAa,EAAEA,aAAc;cAC7BoD,SAAS,EAAEA,SAAU;cACrBa,QAAQ,EACN1D,MAAM,CAACN,SAAS,CAAC,GAAG,GAAG,GACnBf,UAAU,CAACe,SAAS,CAAC,CAAC,CAAC,CAAC,GACxBf,UAAU,CAACe,SAAS,CAAC,CAAC,CAAC;YAC5B;cAAAyD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACD,eACF9E,OAAA,CAACX,QAAQ;cACP4F,IAAI,EAAC,OAAO;cACZZ,SAAS,EAAEA,SAAU;cACrBa,QAAQ,EACN1D,MAAM,CAACN,SAAS,CAAC,GAAG,GAAG,GACnBf,UAAU,CAACe,SAAS,CAAC,CAAC,CAAC,CAAC,GACxBf,UAAU,CAACe,SAAS,CAAC,CAAC,CAAC;YAC5B;cAAAyD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACD;UAAA,gBAEL;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACM,EACVpE,SAAS,iBAAIV,OAAA,CAACP,eAAe;UAACkB,YAAY,EAAEA;QAAa;UAAAgE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACtD,EAER,CAACpE,SAAS,IAAI,CAACE,OAAO,iBAAIZ,OAAA,CAACH,KAAK;QAACgB,UAAU,EAAEA;MAAW;QAAA8D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EAC3D9D,UAAU,KAAK,MAAM,IAAIE,SAAS,GAAG,CAAC,iBACrClB,OAAA;QAAKuE,SAAS,EAAC,+DAA+D;QAAAD,QAAA,gBAC5EtE,OAAA;UACEmF,IAAI,EAAC,QAAQ;UACbC,YAAY,EAAGC,CAAC,IAAK;YACnBA,CAAC,CAACC,cAAc,EAAE;YAClB1B,eAAe,EAAE;YACjBzB,MAAM,CAAC,CAAC,CAAC,CAAC;UACZ,CAAE;UACFoD,WAAW,EAAEA,CAAA,KAAM;YACjBpD,MAAM,CAAC,CAAC,CAAC,CAAC;UACZ,CAAE;UACFqD,UAAU,EAAGH,CAAC,IAAK;YACjBA,CAAC,CAACC,cAAc,EAAE;YAClB5B,YAAY,EAAE;YACdT,QAAQ,EAAE;UACZ,CAAE;UACFwC,SAAS,EAAExC,QAAS;UACpByC,KAAK,EAAE;YACLC,gBAAgB,EAAE,MAAM;YACxBC,aAAa,EAAE,MAAM;YACrBC,YAAY,EAAE,MAAM;YACpBC,UAAU,EAAE;UACd,CAAE;UACFvB,SAAS,EAAC,mFAAmF;UAAAD,QAAA,EAE5F;QAAG;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACG,eACT9E,OAAA;UACEmF,IAAI,EAAC,QAAQ;UACbC,YAAY,EAAGC,CAAC,IAAK;YACnBA,CAAC,CAACC,cAAc,EAAE;YAClB1B,eAAe,EAAE;YACjBzB,MAAM,CAAC,CAAC,CAAC;UACX,CAAE;UACFoD,WAAW,EAAEA,CAAA,KAAM;YACjBpD,MAAM,CAAC,CAAC,CAAC;UACX,CAAE;UACFqD,UAAU,EAAGH,CAAC,IAAK;YACjBA,CAAC,CAACC,cAAc,EAAE;YAClB5B,YAAY,EAAE;YACdT,QAAQ,EAAE;UACZ,CAAE;UACFwC,SAAS,EAAExC,QAAS;UACpByC,KAAK,EAAE;YACLC,gBAAgB,EAAE,MAAM;YACxBC,aAAa,EAAE,MAAM;YACrBC,YAAY,EAAE,MAAM;YACpBC,UAAU,EAAE;UACd,CAAE;UACFvB,SAAS,EAAC,mFAAmF;UAAAD,QAAA,EAE5F;QAAG;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEZ,EAEA9D,UAAU,KAAK,MAAM,IAAIE,SAAS,GAAG,CAAC,iBACrClB,OAAA,CAACF,QAAQ;QAACO,IAAI,EAAEF,UAAU,CAACe,SAAS,CAAC,CAAC,CAAC,CAAC,CAACd;MAAK;QAAAuE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC/C,EAEApE,SAAS,iBAAIV,OAAA,CAACR,aAAa;QAAAmF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EAC9B9D,UAAU,KAAK,OAAO,iBACrBhB,OAAA,CAACN,UAAU;QACTuB,aAAa,EAAEA,aAAc;QAC7BE,YAAY,EAAEA,YAAa;QAC3B4E,MAAM,EACJ3E,UAAU,KAAK,MAAM,GACjBjB,UAAU,CAACe,SAAS,CAAC,CAACM,MAAM,CAACN,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GACtDf,UAAU,CAACe,SAAS,CAAC,CAACM,MAAM,CAACN,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;MAC1D;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EA+BG,iBACL;AAEP,CAAC;AAACrE,EAAA,CAnVID,UAAU;EAAA,QAUGvB,WAAW,EACTU,WAAW;AAAA;AAAAqG,EAAA,GAX1BxF,UAAU;AAqVhB,eAAeA,UAAU;AAAC,IAAAwF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}